

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Wed Oct 08 20:43:18 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F628A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    11                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,space=0,delta=2
    15                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2,group=1
    17                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2,group=1
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20     0000                     
    21                           ; Generated 12/10/2023 GMT
    22                           ; 
    23                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F628A Definitions
    53                           ; 
    54                           ; SFR Addresses
    55     0004                     fsr             equ	4
    56     0004                     fsr0            equ	4
    57     0000                     indf            equ	0
    58     0000                     indf0           equ	0
    59     0002                     pc              equ	2
    60     0002                     pcl             equ	2
    61     000A                     pclath          equ	10
    62     0003                     status          equ	3
    63     0000                     INDF            equ	0	;# 
    64     0001                     TMR0            equ	1	;# 
    65     0002                     PCL             equ	2	;# 
    66     0003                     STATUS          equ	3	;# 
    67     0004                     FSR             equ	4	;# 
    68     0005                     PORTA           equ	5	;# 
    69     0006                     PORTB           equ	6	;# 
    70     000A                     PCLATH          equ	10	;# 
    71     000B                     INTCON          equ	11	;# 
    72     000C                     PIR1            equ	12	;# 
    73     000E                     TMR1            equ	14	;# 
    74     000E                     TMR1L           equ	14	;# 
    75     000F                     TMR1H           equ	15	;# 
    76     0010                     T1CON           equ	16	;# 
    77     0011                     TMR2            equ	17	;# 
    78     0012                     T2CON           equ	18	;# 
    79     0015                     CCPR1           equ	21	;# 
    80     0015                     CCPR1L          equ	21	;# 
    81     0016                     CCPR1H          equ	22	;# 
    82     0017                     CCP1CON         equ	23	;# 
    83     0018                     RCSTA           equ	24	;# 
    84     0019                     TXREG           equ	25	;# 
    85     001A                     RCREG           equ	26	;# 
    86     001F                     CMCON           equ	31	;# 
    87     0081                     OPTION_REG      equ	129	;# 
    88     0085                     TRISA           equ	133	;# 
    89     0086                     TRISB           equ	134	;# 
    90     008C                     PIE1            equ	140	;# 
    91     008E                     PCON            equ	142	;# 
    92     0092                     PR2             equ	146	;# 
    93     0098                     TXSTA           equ	152	;# 
    94     0099                     SPBRG           equ	153	;# 
    95     009A                     EEDATA          equ	154	;# 
    96     009B                     EEADR           equ	155	;# 
    97     009C                     EECON1          equ	156	;# 
    98     009D                     EECON2          equ	157	;# 
    99     009F                     VRCON           equ	159	;# 
   100     0000                     INDF            equ	0	;# 
   101     0001                     TMR0            equ	1	;# 
   102     0002                     PCL             equ	2	;# 
   103     0003                     STATUS          equ	3	;# 
   104     0004                     FSR             equ	4	;# 
   105     0005                     PORTA           equ	5	;# 
   106     0006                     PORTB           equ	6	;# 
   107     000A                     PCLATH          equ	10	;# 
   108     000B                     INTCON          equ	11	;# 
   109     000C                     PIR1            equ	12	;# 
   110     000E                     TMR1            equ	14	;# 
   111     000E                     TMR1L           equ	14	;# 
   112     000F                     TMR1H           equ	15	;# 
   113     0010                     T1CON           equ	16	;# 
   114     0011                     TMR2            equ	17	;# 
   115     0012                     T2CON           equ	18	;# 
   116     0015                     CCPR1           equ	21	;# 
   117     0015                     CCPR1L          equ	21	;# 
   118     0016                     CCPR1H          equ	22	;# 
   119     0017                     CCP1CON         equ	23	;# 
   120     0018                     RCSTA           equ	24	;# 
   121     0019                     TXREG           equ	25	;# 
   122     001A                     RCREG           equ	26	;# 
   123     001F                     CMCON           equ	31	;# 
   124     0081                     OPTION_REG      equ	129	;# 
   125     0085                     TRISA           equ	133	;# 
   126     0086                     TRISB           equ	134	;# 
   127     008C                     PIE1            equ	140	;# 
   128     008E                     PCON            equ	142	;# 
   129     0092                     PR2             equ	146	;# 
   130     0098                     TXSTA           equ	152	;# 
   131     0099                     SPBRG           equ	153	;# 
   132     009A                     EEDATA          equ	154	;# 
   133     009B                     EEADR           equ	155	;# 
   134     009C                     EECON1          equ	156	;# 
   135     009D                     EECON2          equ	157	;# 
   136     009F                     VRCON           equ	159	;# 
   137                           
   138                           	psect	idataBANK0
   139     018C                     __pidataBANK0:
   140                           
   141                           ;initializer for _display
   142     018C  34EE               	retlw	238
   143     018D  3400               	retlw	0
   144     018E  3428               	retlw	40
   145     018F  3400               	retlw	0
   146     0190  34CD               	retlw	205
   147     0191  3400               	retlw	0
   148     0192  346D               	retlw	109
   149     0193  3400               	retlw	0
   150     0194  342B               	retlw	43
   151     0195  3400               	retlw	0
   152     0196  3467               	retlw	103
   153     0197  3400               	retlw	0
   154     0198  34E7               	retlw	231
   155     0199  3400               	retlw	0
   156     019A  342C               	retlw	44
   157     019B  3400               	retlw	0
   158     019C  34EF               	retlw	239
   159     019D  3400               	retlw	0
   160     019E  346F               	retlw	111
   161     019F  3400               	retlw	0
   162                           
   163                           	psect	nvBANK0
   164     003B                     __pnvBANK0:
   165     003B                     _numero:
   166     003B                     	ds	2
   167     0005                     _PORTAbits      set	5
   168     000B                     _INTCON         set	11
   169     0001                     _TMR0           set	1
   170     0006                     _PORTBbits      set	6
   171     0006                     _PORTB          set	6
   172     000B                     _INTCONbits     set	11
   173     005A                     _TMR0IF         set	90
   174     005D                     _TMR0IE         set	93
   175     005F                     _GIE            set	95
   176     0081                     _OPTION_REG     set	129
   177     0086                     _TRISB          set	134
   178     0085                     _TRISA          set	133
   179     009D                     _EECON2         set	157
   180     009A                     _EEDATA         set	154
   181     009C                     _EECON1bits     set	156
   182     009B                     _EEADR          set	155
   183                           
   184                           	psect	cinit
   185     000F                     start_initialization:	
   186                           ; #config settings
   187                           
   188     000F                     __initialization:
   189                           
   190                           ; Initialize objects allocated to BANK0
   191     000F  218C               	fcall	__pidataBANK0	;fetch initializer
   192     0010  00A0               	movwf	__pdataBANK0& (0+127)
   193     0011  218D               	fcall	__pidataBANK0+1	;fetch initializer
   194     0012  00A1               	movwf	(__pdataBANK0+1)& (0+127)
   195     0013  218E               	fcall	__pidataBANK0+2	;fetch initializer
   196     0014  00A2               	movwf	(__pdataBANK0+2)& (0+127)
   197     0015  218F               	fcall	__pidataBANK0+3	;fetch initializer
   198     0016  00A3               	movwf	(__pdataBANK0+3)& (0+127)
   199     0017  2190               	fcall	__pidataBANK0+4	;fetch initializer
   200     0018  00A4               	movwf	(__pdataBANK0+4)& (0+127)
   201     0019  2191               	fcall	__pidataBANK0+5	;fetch initializer
   202     001A  00A5               	movwf	(__pdataBANK0+5)& (0+127)
   203     001B  2192               	fcall	__pidataBANK0+6	;fetch initializer
   204     001C  00A6               	movwf	(__pdataBANK0+6)& (0+127)
   205     001D  2193               	fcall	__pidataBANK0+7	;fetch initializer
   206     001E  00A7               	movwf	(__pdataBANK0+7)& (0+127)
   207     001F  2194               	fcall	__pidataBANK0+8	;fetch initializer
   208     0020  00A8               	movwf	(__pdataBANK0+8)& (0+127)
   209     0021  2195               	fcall	__pidataBANK0+9	;fetch initializer
   210     0022  00A9               	movwf	(__pdataBANK0+9)& (0+127)
   211     0023  2196               	fcall	__pidataBANK0+10	;fetch initializer
   212     0024  00AA               	movwf	(__pdataBANK0+10)& (0+127)
   213     0025  2197               	fcall	__pidataBANK0+11	;fetch initializer
   214     0026  00AB               	movwf	(__pdataBANK0+11)& (0+127)
   215     0027  2198               	fcall	__pidataBANK0+12	;fetch initializer
   216     0028  00AC               	movwf	(__pdataBANK0+12)& (0+127)
   217     0029  2199               	fcall	__pidataBANK0+13	;fetch initializer
   218     002A  00AD               	movwf	(__pdataBANK0+13)& (0+127)
   219     002B  219A               	fcall	__pidataBANK0+14	;fetch initializer
   220     002C  00AE               	movwf	(__pdataBANK0+14)& (0+127)
   221     002D  219B               	fcall	__pidataBANK0+15	;fetch initializer
   222     002E  00AF               	movwf	(__pdataBANK0+15)& (0+127)
   223     002F  219C               	fcall	__pidataBANK0+16	;fetch initializer
   224     0030  00B0               	movwf	(__pdataBANK0+16)& (0+127)
   225     0031  219D               	fcall	__pidataBANK0+17	;fetch initializer
   226     0032  00B1               	movwf	(__pdataBANK0+17)& (0+127)
   227     0033  219E               	fcall	__pidataBANK0+18	;fetch initializer
   228     0034  00B2               	movwf	(__pdataBANK0+18)& (0+127)
   229     0035  219F               	fcall	__pidataBANK0+19	;fetch initializer
   230     0036  00B3               	movwf	(__pdataBANK0+19)& (0+127)
   231     0037                     end_of_initialization:	
   232                           ;End of C runtime variable initialization code
   233                           
   234     0037                     __end_of__initialization:
   235     0037  0183               	clrf	3
   236     0038  2839               	ljmp	_main	;jump to C main() function
   237                           
   238                           	psect	dataBANK0
   239     0020                     __pdataBANK0:
   240     0020                     _display:
   241     0020                     	ds	20
   242                           
   243                           	psect	cstackCOMMON
   244     0070                     __pcstackCOMMON:
   245     0070                     ?_eeprom_leitura:
   246     0070                     ?_atualizaDisplay:	
   247                           ; 1 bytes @ 0x0
   248                           
   249     0070                     ?_interrupcaoTimer0:	
   250                           ; 1 bytes @ 0x0
   251                           
   252     0070                     ?_main:	
   253                           ; 1 bytes @ 0x0
   254                           
   255     0070                     ?___wmul:	
   256                           ; 1 bytes @ 0x0
   257                           
   258     0070                     ?___lwdiv:	
   259                           ; 2 bytes @ 0x0
   260                           
   261     0070                     ___wmul@multiplier:	
   262                           ; 2 bytes @ 0x0
   263                           
   264     0070                     ___lwdiv@divisor:	
   265                           ; 2 bytes @ 0x0
   266                           
   267                           
   268                           ; 2 bytes @ 0x0
   269     0070                     	ds	2
   270     0072                     ___wmul@multiplicand:
   271     0072                     ___lwdiv@dividend:	
   272                           ; 2 bytes @ 0x2
   273                           
   274                           
   275                           ; 2 bytes @ 0x2
   276     0072                     	ds	2
   277     0074                     ___wmul@product:
   278     0074                     ___lwdiv@quotient:	
   279                           ; 2 bytes @ 0x4
   280                           
   281     0074                     ??___wmul:	
   282                           ; 2 bytes @ 0x4
   283                           
   284     0074                     ??___lwdiv:	
   285                           ; 1 bytes @ 0x4
   286                           
   287                           
   288                           ; 1 bytes @ 0x4
   289     0074                     	ds	2
   290     0076                     ___lwdiv@counter:
   291                           
   292                           ; 1 bytes @ 0x6
   293     0076                     	ds	1
   294     0077                     ??_atualizaDisplay:
   295                           
   296                           ; 1 bytes @ 0x7
   297     0077                     	ds	2
   298     0079                     atualizaDisplay@unidade:
   299                           
   300                           ; 2 bytes @ 0x9
   301     0079                     	ds	2
   302     007B                     atualizaDisplay@dezena:
   303                           
   304                           ; 2 bytes @ 0xB
   305     007B                     	ds	2
   306                           
   307                           	psect	cstackBANK0
   308     0034                     __pcstackBANK0:
   309     0034                     ??_interrupcaoTimer0:
   310                           
   311                           ; 1 bytes @ 0x0
   312     0034                     	ds	3
   313     0037                     ?_eeprom_escrita:
   314     0037                     eeprom_leitura@endereco:	
   315                           ; 1 bytes @ 0x3
   316                           
   317     0037                     eeprom_escrita@valor:	
   318                           ; 1 bytes @ 0x3
   319                           
   320     0037                     ??_eeprom_leitura:	
   321                           ; 1 bytes @ 0x3
   322                           
   323                           
   324                           ; 1 bytes @ 0x3
   325     0037                     	ds	1
   326     0038                     eeprom_escrita@endereco:
   327     0038                     ??_eeprom_escrita:	
   328                           ; 1 bytes @ 0x4
   329                           
   330                           
   331                           ; 1 bytes @ 0x4
   332     0038                     	ds	1
   333     0039                     ??_main:
   334                           
   335                           ; 1 bytes @ 0x5
   336     0039                     	ds	2
   337                           
   338                           	psect	maintext
   339     0039                     __pmaintext:	
   340 ;;
   341 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   342 ;;
   343 ;; *************** function _main *****************
   344 ;; Defined at:
   345 ;;		line 70 in file "DisplayInterrupcao.c"
   346 ;; Parameters:    Size  Location     Type
   347 ;;		None
   348 ;; Auto vars:     Size  Location     Type
   349 ;;		None
   350 ;; Return value:  Size  Location     Type
   351 ;;                  1    wreg      void 
   352 ;; Registers used:
   353 ;;		wreg, status,2, status,0, pclath, cstack
   354 ;; Tracked objects:
   355 ;;		On entry : B00/0
   356 ;;		On exit  : 0/0
   357 ;;		Unchanged: 0/0
   358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   359 ;;      Params:         0       0       0       0
   360 ;;      Locals:         0       0       0       0
   361 ;;      Temps:          0       2       0       0
   362 ;;      Totals:         0       2       0       0
   363 ;;Total ram usage:        2 bytes
   364 ;; Hardware stack levels required when called: 4
   365 ;; This function calls:
   366 ;;		_eeprom_escrita
   367 ;;		_eeprom_leitura
   368 ;; This function is called by:
   369 ;;		Startup code after reset
   370 ;; This function uses a non-reentrant model
   371 ;;
   372                           
   373     0039                     _main:	
   374                           ;psect for function _main
   375                           
   376     0039                     l820:	
   377                           ;incstack = 0
   378                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   379                           
   380                           
   381                           ;DisplayInterrupcao.c: 72:     TRISA = 0xFF;
   382     0039  30FF               	movlw	255
   383     003A  1683               	bsf	3,5	;RP0=1, select bank1
   384     003B  1303               	bcf	3,6	;RP1=0, select bank1
   385     003C  0085               	movwf	5	;volatile
   386     003D                     l822:
   387                           
   388                           ;DisplayInterrupcao.c: 73:     TRISB = 0x00;
   389     003D  0186               	clrf	6	;volatile
   390                           
   391                           ;DisplayInterrupcao.c: 74:     PORTB = 0x00;
   392     003E  1283               	bcf	3,5	;RP0=0, select bank0
   393     003F  1303               	bcf	3,6	;RP1=0, select bank0
   394     0040  0186               	clrf	6	;volatile
   395     0041                     l824:
   396                           
   397                           ;DisplayInterrupcao.c: 76:     OPTION_REG = 0x06;
   398     0041  3006               	movlw	6
   399     0042  1683               	bsf	3,5	;RP0=1, select bank1
   400     0043  1303               	bcf	3,6	;RP1=0, select bank1
   401     0044  0081               	movwf	1	;volatile
   402     0045                     l826:
   403                           
   404                           ;DisplayInterrupcao.c: 77:     INTCON = 0xA0;
   405     0045  30A0               	movlw	160
   406     0046  008B               	movwf	11	;volatile
   407     0047                     l828:
   408                           
   409                           ;DisplayInterrupcao.c: 79:     numero = eeprom_leitura(0x00);
   410     0047  3000               	movlw	0
   411     0048  21A0               	fcall	_eeprom_leitura
   412     0049  1283               	bcf	3,5	;RP0=0, select bank0
   413     004A  1303               	bcf	3,6	;RP1=0, select bank0
   414     004B  00B9               	movwf	??_main
   415     004C  01BA               	clrf	??_main+1
   416     004D  0839               	movf	??_main,w
   417     004E  00BB               	movwf	_numero
   418     004F  083A               	movf	??_main+1,w
   419     0050  00BC               	movwf	_numero+1
   420     0051                     l830:
   421                           
   422                           ;DisplayInterrupcao.c: 82:     {;DisplayInterrupcao.c: 83:         if (!PORTAbits.RA2)
   423     0051  1283               	bcf	3,5	;RP0=0, select bank0
   424     0052  1303               	bcf	3,6	;RP1=0, select bank0
   425     0053  1905               	btfsc	5,2	;volatile
   426     0054  2856               	goto	u351
   427     0055  2857               	goto	u350
   428     0056                     u351:
   429     0056  2877               	goto	l840
   430     0057                     u350:
   431     0057                     l832:
   432                           
   433                           ;DisplayInterrupcao.c: 84:         {;DisplayInterrupcao.c: 85:             numero++;
   434     0057  3001               	movlw	1
   435     0058  07BB               	addwf	_numero,f
   436     0059  1803               	skipnc
   437     005A  0ABC               	incf	_numero+1,f
   438     005B  3000               	movlw	0
   439     005C  07BC               	addwf	_numero+1,f
   440                           
   441                           ;DisplayInterrupcao.c: 86:             if (numero > 99)
   442     005D  3000               	movlw	0
   443     005E  023C               	subwf	_numero+1,w
   444     005F  3064               	movlw	100
   445     0060  1903               	skipnz
   446     0061  023B               	subwf	_numero,w
   447     0062  1C03               	skipc
   448     0063  2865               	goto	u361
   449     0064  2866               	goto	u360
   450     0065                     u361:
   451     0065  2868               	goto	l836
   452     0066                     u360:
   453     0066                     l834:
   454                           
   455                           ;DisplayInterrupcao.c: 87:                 numero = 0;
   456     0066  01BB               	clrf	_numero
   457     0067  01BC               	clrf	_numero+1
   458     0068                     l836:
   459                           
   460                           ;DisplayInterrupcao.c: 88:             eeprom_escrita(0x00, numero);
   461     0068  083B               	movf	_numero,w
   462     0069  00B7               	movwf	eeprom_escrita@valor
   463     006A  3000               	movlw	0
   464     006B  2150               	fcall	_eeprom_escrita
   465     006C                     l838:
   466                           
   467                           ;DisplayInterrupcao.c: 89:             _delay((unsigned long)((100)*(4000000/4000.0)));
   468     006C  3082               	movlw	130
   469     006D  1283               	bcf	3,5	;RP0=0, select bank0
   470     006E  1303               	bcf	3,6	;RP1=0, select bank0
   471     006F  00BA               	movwf	??_main+1
   472     0070  30DD               	movlw	221
   473     0071  00B9               	movwf	??_main
   474     0072                     u397:
   475     0072  0BB9               	decfsz	??_main,f
   476     0073  2872               	goto	u397
   477     0074  0BBA               	decfsz	??_main+1,f
   478     0075  2872               	goto	u397
   479     0076  0000               	nop
   480     0077                     l840:
   481                           
   482                           ;DisplayInterrupcao.c: 92:         if (!PORTAbits.RA1)
   483     0077  1283               	bcf	3,5	;RP0=0, select bank0
   484     0078  1303               	bcf	3,6	;RP1=0, select bank0
   485     0079  1885               	btfsc	5,1	;volatile
   486     007A  287C               	goto	u371
   487     007B  287D               	goto	u370
   488     007C                     u371:
   489     007C  2851               	goto	l830
   490     007D                     u370:
   491     007D                     l842:
   492                           
   493                           ;DisplayInterrupcao.c: 93:         {;DisplayInterrupcao.c: 94:             numero--;
   494     007D  3001               	movlw	1
   495     007E  02BB               	subwf	_numero,f
   496     007F  3000               	movlw	0
   497     0080  1C03               	skipc
   498     0081  03BC               	decf	_numero+1,f
   499     0082  02BC               	subwf	_numero+1,f
   500                           
   501                           ;DisplayInterrupcao.c: 95:             if (numero > 99)
   502     0083  3000               	movlw	0
   503     0084  023C               	subwf	_numero+1,w
   504     0085  3064               	movlw	100
   505     0086  1903               	skipnz
   506     0087  023B               	subwf	_numero,w
   507     0088  1C03               	skipc
   508     0089  288B               	goto	u381
   509     008A  288C               	goto	u380
   510     008B                     u381:
   511     008B  2890               	goto	l846
   512     008C                     u380:
   513     008C                     l844:
   514                           
   515                           ;DisplayInterrupcao.c: 96:                 numero = 99;
   516     008C  3063               	movlw	99
   517     008D  00BB               	movwf	_numero
   518     008E  3000               	movlw	0
   519     008F  00BC               	movwf	_numero+1
   520     0090                     l846:
   521                           
   522                           ;DisplayInterrupcao.c: 97:             eeprom_escrita(0x00, numero);
   523     0090  083B               	movf	_numero,w
   524     0091  00B7               	movwf	eeprom_escrita@valor
   525     0092  3000               	movlw	0
   526     0093  2150               	fcall	_eeprom_escrita
   527     0094                     l848:
   528                           
   529                           ;DisplayInterrupcao.c: 98:             _delay((unsigned long)((100)*(4000000/4000.0)));
   530     0094  3082               	movlw	130
   531     0095  1283               	bcf	3,5	;RP0=0, select bank0
   532     0096  1303               	bcf	3,6	;RP1=0, select bank0
   533     0097  00BA               	movwf	??_main+1
   534     0098  30DD               	movlw	221
   535     0099  00B9               	movwf	??_main
   536     009A                     u407:
   537     009A  0BB9               	decfsz	??_main,f
   538     009B  289A               	goto	u407
   539     009C  0BBA               	decfsz	??_main+1,f
   540     009D  289A               	goto	u407
   541     009E  0000               	nop
   542     009F  2851               	goto	l830
   543     00A0  280E               	ljmp	start
   544     00A1                     __end_of_main:
   545                           
   546                           	psect	text1
   547     01A0                     __ptext1:	
   548 ;; *************** function _eeprom_leitura *****************
   549 ;; Defined at:
   550 ;;		line 19 in file "DisplayInterrupcao.c"
   551 ;; Parameters:    Size  Location     Type
   552 ;;  endereco        1    wreg     unsigned char 
   553 ;; Auto vars:     Size  Location     Type
   554 ;;  endereco        1    3[BANK0 ] unsigned char 
   555 ;; Return value:  Size  Location     Type
   556 ;;                  1    wreg      unsigned char 
   557 ;; Registers used:
   558 ;;		wreg
   559 ;; Tracked objects:
   560 ;;		On entry : 0/0
   561 ;;		On exit  : 0/0
   562 ;;		Unchanged: 0/0
   563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   564 ;;      Params:         0       0       0       0
   565 ;;      Locals:         0       1       0       0
   566 ;;      Temps:          0       0       0       0
   567 ;;      Totals:         0       1       0       0
   568 ;;Total ram usage:        1 bytes
   569 ;; Hardware stack levels used: 1
   570 ;; Hardware stack levels required when called: 3
   571 ;; This function calls:
   572 ;;		Nothing
   573 ;; This function is called by:
   574 ;;		_main
   575 ;; This function uses a non-reentrant model
   576 ;;
   577                           
   578     01A0                     _eeprom_leitura:	
   579                           ;psect for function _eeprom_leitura
   580                           
   581                           
   582                           ;incstack = 0
   583                           ; Regs used in _eeprom_leitura: [wreg]
   584                           ;eeprom_leitura@endereco stored from wreg
   585     01A0  1283               	bcf	3,5	;RP0=0, select bank0
   586     01A1  1303               	bcf	3,6	;RP1=0, select bank0
   587     01A2  00B7               	movwf	eeprom_leitura@endereco
   588     01A3                     l772:
   589                           
   590                           ;DisplayInterrupcao.c: 19: unsigned char eeprom_leitura(unsigned char endereco);DisplayI
      +                          nterrupcao.c: 20: {;DisplayInterrupcao.c: 21:     EEADR = endereco;
   591     01A3  0837               	movf	eeprom_leitura@endereco,w
   592     01A4  1683               	bsf	3,5	;RP0=1, select bank1
   593     01A5  1303               	bcf	3,6	;RP1=0, select bank1
   594     01A6  009B               	movwf	27	;volatile
   595     01A7                     l774:
   596                           
   597                           ;DisplayInterrupcao.c: 22:     EECON1bits.RD = 1;
   598     01A7  141C               	bsf	28,0	;volsfr
   599                           
   600                           ;DisplayInterrupcao.c: 23:     return EEDATA;
   601     01A8  081A               	movf	26,w	;volatile
   602     01A9                     l41:
   603     01A9  0008               	return
   604     01AA                     __end_of_eeprom_leitura:
   605                           
   606                           	psect	text2
   607     0150                     __ptext2:	
   608 ;; *************** function _eeprom_escrita *****************
   609 ;; Defined at:
   610 ;;		line 26 in file "DisplayInterrupcao.c"
   611 ;; Parameters:    Size  Location     Type
   612 ;;  endereco        1    wreg     unsigned char 
   613 ;;  valor           1    3[BANK0 ] unsigned char 
   614 ;; Auto vars:     Size  Location     Type
   615 ;;  endereco        1    4[BANK0 ] unsigned char 
   616 ;; Return value:  Size  Location     Type
   617 ;;                  1    wreg      void 
   618 ;; Registers used:
   619 ;;		wreg
   620 ;; Tracked objects:
   621 ;;		On entry : 0/0
   622 ;;		On exit  : 0/0
   623 ;;		Unchanged: 0/0
   624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   625 ;;      Params:         0       1       0       0
   626 ;;      Locals:         0       1       0       0
   627 ;;      Temps:          0       0       0       0
   628 ;;      Totals:         0       2       0       0
   629 ;;Total ram usage:        2 bytes
   630 ;; Hardware stack levels used: 1
   631 ;; Hardware stack levels required when called: 3
   632 ;; This function calls:
   633 ;;		Nothing
   634 ;; This function is called by:
   635 ;;		_main
   636 ;; This function uses a non-reentrant model
   637 ;;
   638                           
   639     0150                     _eeprom_escrita:	
   640                           ;psect for function _eeprom_escrita
   641                           
   642                           
   643                           ;incstack = 0
   644                           ; Regs used in _eeprom_escrita: [wreg]
   645                           ;eeprom_escrita@endereco stored from wreg
   646     0150  1283               	bcf	3,5	;RP0=0, select bank0
   647     0151  1303               	bcf	3,6	;RP1=0, select bank0
   648     0152  00B8               	movwf	eeprom_escrita@endereco
   649     0153                     l778:
   650     0153                     l44:	
   651                           ;DisplayInterrupcao.c: 26: void eeprom_escrita(unsigned char endereco, unsigned char val
      +                          or);DisplayInterrupcao.c: 27: {;DisplayInterrupcao.c: 28:     while (EECON1bits.WR);
   652                           
   653     0153  1683               	bsf	3,5	;RP0=1, select bank1
   654     0154  1303               	bcf	3,6	;RP1=0, select bank1
   655     0155  189C               	btfsc	28,1	;volsfr
   656     0156  2958               	goto	u311
   657     0157  2959               	goto	u310
   658     0158                     u311:
   659     0158  2953               	goto	l44
   660     0159                     u310:
   661     0159                     l780:
   662                           
   663                           ;DisplayInterrupcao.c: 30:     EEADR = endereco;
   664     0159  1283               	bcf	3,5	;RP0=0, select bank0
   665     015A  1303               	bcf	3,6	;RP1=0, select bank0
   666     015B  0838               	movf	eeprom_escrita@endereco,w
   667     015C  1683               	bsf	3,5	;RP0=1, select bank1
   668     015D  1303               	bcf	3,6	;RP1=0, select bank1
   669     015E  009B               	movwf	27	;volatile
   670                           
   671                           ;DisplayInterrupcao.c: 31:     EEDATA = valor;
   672     015F  1283               	bcf	3,5	;RP0=0, select bank0
   673     0160  1303               	bcf	3,6	;RP1=0, select bank0
   674     0161  0837               	movf	eeprom_escrita@valor,w
   675     0162  1683               	bsf	3,5	;RP0=1, select bank1
   676     0163  1303               	bcf	3,6	;RP1=0, select bank1
   677     0164  009A               	movwf	26	;volatile
   678     0165                     l782:
   679                           
   680                           ;DisplayInterrupcao.c: 33:     EECON1bits.WREN = 1;
   681     0165  151C               	bsf	28,2	;volsfr
   682     0166                     l784:
   683                           
   684                           ;DisplayInterrupcao.c: 34:     INTCONbits.GIE = 0;
   685     0166  138B               	bcf	11,7	;volatile
   686     0167                     l786:
   687                           
   688                           ;DisplayInterrupcao.c: 36:     EECON2 = 0x55;
   689     0167  3055               	movlw	85
   690     0168  009D               	movwf	29	;volsfr
   691     0169                     l788:
   692                           
   693                           ;DisplayInterrupcao.c: 37:     EECON2 = 0xAA;
   694     0169  30AA               	movlw	170
   695     016A  009D               	movwf	29	;volsfr
   696     016B                     l790:
   697                           
   698                           ;DisplayInterrupcao.c: 39:     EECON1bits.WR = 1;
   699     016B  149C               	bsf	28,1	;volsfr
   700     016C                     l792:
   701                           
   702                           ;DisplayInterrupcao.c: 40:     INTCONbits.GIE = 1;
   703     016C  178B               	bsf	11,7	;volatile
   704     016D                     l47:	
   705                           ;DisplayInterrupcao.c: 42:     while (EECON1bits.WR);
   706                           
   707     016D  189C               	btfsc	28,1	;volsfr
   708     016E  2970               	goto	u321
   709     016F  2971               	goto	u320
   710     0170                     u321:
   711     0170  296D               	goto	l47
   712     0171                     u320:
   713     0171                     l49:
   714                           
   715                           ;DisplayInterrupcao.c: 43:     EECON1bits.WREN = 0;
   716     0171  111C               	bcf	28,2	;volsfr
   717     0172                     l50:
   718     0172  0008               	return
   719     0173                     __end_of_eeprom_escrita:
   720                           
   721                           	psect	text3
   722     0173                     __ptext3:	
   723 ;; *************** function _interrupcaoTimer0 *****************
   724 ;; Defined at:
   725 ;;		line 57 in file "DisplayInterrupcao.c"
   726 ;; Parameters:    Size  Location     Type
   727 ;;		None
   728 ;; Auto vars:     Size  Location     Type
   729 ;;		None
   730 ;; Return value:  Size  Location     Type
   731 ;;                  1    wreg      void 
   732 ;; Registers used:
   733 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   734 ;; Tracked objects:
   735 ;;		On entry : 0/0
   736 ;;		On exit  : 0/0
   737 ;;		Unchanged: 0/0
   738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   739 ;;      Params:         0       0       0       0
   740 ;;      Locals:         0       0       0       0
   741 ;;      Temps:          0       3       0       0
   742 ;;      Totals:         0       3       0       0
   743 ;;Total ram usage:        3 bytes
   744 ;; Hardware stack levels used: 1
   745 ;; Hardware stack levels required when called: 2
   746 ;; This function calls:
   747 ;;		_atualizaDisplay
   748 ;; This function is called by:
   749 ;;		Interrupt level 1
   750 ;; This function uses a non-reentrant model
   751 ;;
   752                           
   753     0173                     _interrupcaoTimer0:	
   754                           ;psect for function _interrupcaoTimer0
   755                           
   756     0173                     i1l806:
   757                           
   758                           ;DisplayInterrupcao.c: 59:     GIE = 0;
   759     0173  138B               	bcf	11,7	;volatile
   760                           
   761                           ;DisplayInterrupcao.c: 60:     if (TMR0IE && TMR0IF)
   762     0174  1E8B               	btfss	11,5	;volatile
   763     0175  2977               	goto	u33_21
   764     0176  2978               	goto	u33_20
   765     0177                     u33_21:
   766     0177  2982               	goto	i1l816
   767     0178                     u33_20:
   768     0178                     i1l808:
   769     0178  1D0B               	btfss	11,2	;volatile
   770     0179  297B               	goto	u34_21
   771     017A  297C               	goto	u34_20
   772     017B                     u34_21:
   773     017B  2982               	goto	i1l816
   774     017C                     u34_20:
   775     017C                     i1l810:
   776                           
   777                           ;DisplayInterrupcao.c: 61:     {;DisplayInterrupcao.c: 62:         atualizaDisplay();
   778     017C  20A1               	fcall	_atualizaDisplay
   779     017D                     i1l812:
   780                           
   781                           ;DisplayInterrupcao.c: 63:         TMR0IF = 0;
   782     017D  110B               	bcf	11,2	;volatile
   783     017E                     i1l814:
   784                           
   785                           ;DisplayInterrupcao.c: 64:         TMR0 = 230;
   786     017E  30E6               	movlw	230
   787     017F  1283               	bcf	3,5	;RP0=0, select bank0
   788     0180  1303               	bcf	3,6	;RP1=0, select bank0
   789     0181  0081               	movwf	1	;volatile
   790     0182                     i1l816:
   791                           
   792                           ;DisplayInterrupcao.c: 66:     GIE = 1;
   793     0182  178B               	bsf	11,7	;volatile
   794     0183                     i1l59:
   795     0183  0836               	movf	??_interrupcaoTimer0+2,w
   796     0184  008A               	movwf	10
   797     0185  0835               	movf	??_interrupcaoTimer0+1,w
   798     0186  0084               	movwf	4
   799     0187  0E34               	swapf	??_interrupcaoTimer0,w
   800     0188  0083               	movwf	3
   801     0189  0EFE               	swapf	btemp,f
   802     018A  0E7E               	swapf	btemp,w
   803     018B  0009               	retfie
   804     018C                     __end_of_interrupcaoTimer0:
   805                           
   806                           	psect	intentry
   807     0004                     __pintentry:	
   808                           ;incstack = 0
   809                           ; Regs used in _interrupcaoTimer0: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   810                           
   811     0004                     interrupt_function:
   812     007E                     saved_w         set	btemp
   813     0004  00FE               	movwf	btemp
   814     0005  0E03               	swapf	3,w
   815     0006  1283               	bcf	3,5	;RP0=0, select bank0
   816     0007  1303               	bcf	3,6	;RP1=0, select bank0
   817     0008  00B4               	movwf	??_interrupcaoTimer0
   818     0009  0804               	movf	4,w
   819     000A  00B5               	movwf	??_interrupcaoTimer0+1
   820     000B  080A               	movf	10,w
   821     000C  00B6               	movwf	??_interrupcaoTimer0+2
   822     000D  2973               	ljmp	_interrupcaoTimer0
   823                           
   824                           	psect	text4
   825     00A1                     __ptext4:	
   826 ;; *************** function _atualizaDisplay *****************
   827 ;; Defined at:
   828 ;;		line 46 in file "DisplayInterrupcao.c"
   829 ;; Parameters:    Size  Location     Type
   830 ;;		None
   831 ;; Auto vars:     Size  Location     Type
   832 ;;  dezena          2   11[COMMON] int 
   833 ;;  unidade         2    9[COMMON] int 
   834 ;; Return value:  Size  Location     Type
   835 ;;                  1    wreg      void 
   836 ;; Registers used:
   837 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   838 ;; Tracked objects:
   839 ;;		On entry : 0/0
   840 ;;		On exit  : 0/0
   841 ;;		Unchanged: 0/0
   842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   843 ;;      Params:         0       0       0       0
   844 ;;      Locals:         4       0       0       0
   845 ;;      Temps:          2       0       0       0
   846 ;;      Totals:         6       0       0       0
   847 ;;Total ram usage:        6 bytes
   848 ;; Hardware stack levels used: 1
   849 ;; Hardware stack levels required when called: 1
   850 ;; This function calls:
   851 ;;		___lwdiv
   852 ;;		___wmul
   853 ;; This function is called by:
   854 ;;		_interrupcaoTimer0
   855 ;; This function uses a non-reentrant model
   856 ;;
   857                           
   858     00A1                     _atualizaDisplay:	
   859                           ;psect for function _atualizaDisplay
   860                           
   861     00A1                     i1l794:	
   862                           ;incstack = 0
   863                           ; Regs used in _atualizaDisplay: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   864                           
   865                           
   866                           ;DisplayInterrupcao.c: 48:     int dezena = numero / 10;
   867     00A1  300A               	movlw	10
   868     00A2  00F0               	movwf	___lwdiv@divisor
   869     00A3  3000               	movlw	0
   870     00A4  00F1               	movwf	___lwdiv@divisor+1
   871     00A5  1283               	bcf	3,5	;RP0=0, select bank0
   872     00A6  1303               	bcf	3,6	;RP1=0, select bank0
   873     00A7  083C               	movf	_numero+1,w
   874     00A8  00F3               	movwf	___lwdiv@dividend+1
   875     00A9  083B               	movf	_numero,w
   876     00AA  00F2               	movwf	___lwdiv@dividend
   877     00AB  20E9               	fcall	___lwdiv
   878     00AC  0871               	movf	?___lwdiv+1,w
   879     00AD  00FC               	movwf	atualizaDisplay@dezena+1
   880     00AE  0870               	movf	?___lwdiv,w
   881     00AF  00FB               	movwf	atualizaDisplay@dezena
   882                           
   883                           ;DisplayInterrupcao.c: 49:     int unidade = numero - (dezena * 10);
   884     00B0  087C               	movf	atualizaDisplay@dezena+1,w
   885     00B1  00F1               	movwf	___wmul@multiplier+1
   886     00B2  087B               	movf	atualizaDisplay@dezena,w
   887     00B3  00F0               	movwf	___wmul@multiplier
   888     00B4  30F6               	movlw	246
   889     00B5  00F2               	movwf	___wmul@multiplicand
   890     00B6  30FF               	movlw	255
   891     00B7  00F3               	movwf	___wmul@multiplicand+1
   892     00B8  212B               	fcall	___wmul
   893     00B9  1283               	bcf	3,5	;RP0=0, select bank0
   894     00BA  1303               	bcf	3,6	;RP1=0, select bank0
   895     00BB  083B               	movf	_numero,w
   896     00BC  0770               	addwf	?___wmul,w
   897     00BD  00F9               	movwf	atualizaDisplay@unidade
   898     00BE  083C               	movf	_numero+1,w
   899     00BF  1803               	skipnc
   900     00C0  0A3C               	incf	_numero+1,w
   901     00C1  0771               	addwf	?___wmul+1,w
   902     00C2  00FA               	movwf	atualizaDisplay@unidade+1
   903     00C3                     i1l796:
   904                           
   905                           ;DisplayInterrupcao.c: 50:     PORTB = display[dezena];
   906     00C3  087B               	movf	atualizaDisplay@dezena,w
   907     00C4  00F7               	movwf	??_atualizaDisplay
   908     00C5  0777               	addwf	??_atualizaDisplay,w
   909     00C6  3E20               	addlw	(low (_display| 0))& (0+255)
   910     00C7  0084               	movwf	4
   911     00C8  1383               	bcf	3,7	;select IRP bank0
   912     00C9  0800               	movf	0,w
   913     00CA  0086               	movwf	6	;volatile
   914     00CB                     i1l798:
   915                           
   916                           ;DisplayInterrupcao.c: 51:     _delay((unsigned long)((10)*(4000000/4000.0)));
   917     00CB  300D               	movlw	13
   918     00CC  00F8               	movwf	??_atualizaDisplay+1
   919     00CD  30FB               	movlw	251
   920     00CE  00F7               	movwf	??_atualizaDisplay
   921     00CF                     u41_27:
   922     00CF  0BF7               	decfsz	??_atualizaDisplay,f
   923     00D0  28CF               	goto	u41_27
   924     00D1  0BF8               	decfsz	??_atualizaDisplay+1,f
   925     00D2  28CF               	goto	u41_27
   926     00D3  28D4               	nop2
   927     00D4                     i1l800:
   928                           
   929                           ;DisplayInterrupcao.c: 52:     PORTB = display[unidade];
   930     00D4  0879               	movf	atualizaDisplay@unidade,w
   931     00D5  00F7               	movwf	??_atualizaDisplay
   932     00D6  0777               	addwf	??_atualizaDisplay,w
   933     00D7  3E20               	addlw	(low (_display| 0))& (0+255)
   934     00D8  0084               	movwf	4
   935     00D9  1383               	bcf	3,7	;select IRP bank0
   936     00DA  0800               	movf	0,w
   937     00DB  1283               	bcf	3,5	;RP0=0, select bank0
   938     00DC  1303               	bcf	3,6	;RP1=0, select bank0
   939     00DD  0086               	movwf	6	;volatile
   940     00DE                     i1l802:
   941                           
   942                           ;DisplayInterrupcao.c: 53:     PORTBbits.RB4 = 1;
   943     00DE  1606               	bsf	6,4	;volatile
   944     00DF                     i1l804:
   945                           
   946                           ;DisplayInterrupcao.c: 54:     _delay((unsigned long)((10)*(4000000/4000.0)));
   947     00DF  300D               	movlw	13
   948     00E0  00F8               	movwf	??_atualizaDisplay+1
   949     00E1  30FB               	movlw	251
   950     00E2  00F7               	movwf	??_atualizaDisplay
   951     00E3                     u42_27:
   952     00E3  0BF7               	decfsz	??_atualizaDisplay,f
   953     00E4  28E3               	goto	u42_27
   954     00E5  0BF8               	decfsz	??_atualizaDisplay+1,f
   955     00E6  28E3               	goto	u42_27
   956     00E7  28E8               	nop2
   957     00E8                     i1l53:
   958     00E8  0008               	return
   959     00E9                     __end_of_atualizaDisplay:
   960                           
   961                           	psect	text5
   962     012B                     __ptext5:	
   963 ;; *************** function ___wmul *****************
   964 ;; Defined at:
   965 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul16.c"
   966 ;; Parameters:    Size  Location     Type
   967 ;;  multiplier      2    0[COMMON] unsigned int 
   968 ;;  multiplicand    2    2[COMMON] unsigned int 
   969 ;; Auto vars:     Size  Location     Type
   970 ;;  product         2    4[COMMON] unsigned int 
   971 ;; Return value:  Size  Location     Type
   972 ;;                  2    0[COMMON] unsigned int 
   973 ;; Registers used:
   974 ;;		wreg, status,2, status,0
   975 ;; Tracked objects:
   976 ;;		On entry : 0/0
   977 ;;		On exit  : 0/0
   978 ;;		Unchanged: 0/0
   979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   980 ;;      Params:         4       0       0       0
   981 ;;      Locals:         2       0       0       0
   982 ;;      Temps:          0       0       0       0
   983 ;;      Totals:         6       0       0       0
   984 ;;Total ram usage:        6 bytes
   985 ;; Hardware stack levels used: 1
   986 ;; This function calls:
   987 ;;		Nothing
   988 ;; This function is called by:
   989 ;;		_atualizaDisplay
   990 ;; This function uses a non-reentrant model
   991 ;;
   992                           
   993     012B                     ___wmul:	
   994                           ;psect for function ___wmul
   995                           
   996     012B                     i1l732:	
   997                           ;incstack = 0
   998                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   999                           
  1000     012B  01F4               	clrf	___wmul@product
  1001     012C  01F5               	clrf	___wmul@product+1
  1002     012D                     i1l734:
  1003     012D  1C70               	btfss	___wmul@multiplier,0
  1004     012E  2930               	goto	u20_21
  1005     012F  2931               	goto	u20_20
  1006     0130                     u20_21:
  1007     0130  2937               	goto	i1l156
  1008     0131                     u20_20:
  1009     0131                     i1l736:
  1010     0131  0872               	movf	___wmul@multiplicand,w
  1011     0132  07F4               	addwf	___wmul@product,f
  1012     0133  1803               	skipnc
  1013     0134  0AF5               	incf	___wmul@product+1,f
  1014     0135  0873               	movf	___wmul@multiplicand+1,w
  1015     0136  07F5               	addwf	___wmul@product+1,f
  1016     0137                     i1l156:
  1017     0137  3001               	movlw	1
  1018     0138                     u21_25:
  1019     0138  1003               	clrc
  1020     0139  0DF2               	rlf	___wmul@multiplicand,f
  1021     013A  0DF3               	rlf	___wmul@multiplicand+1,f
  1022     013B  3EFF               	addlw	-1
  1023     013C  1D03               	skipz
  1024     013D  2938               	goto	u21_25
  1025     013E                     i1l738:
  1026     013E  3001               	movlw	1
  1027     013F                     u22_25:
  1028     013F  1003               	clrc
  1029     0140  0CF1               	rrf	___wmul@multiplier+1,f
  1030     0141  0CF0               	rrf	___wmul@multiplier,f
  1031     0142  3EFF               	addlw	-1
  1032     0143  1D03               	skipz
  1033     0144  293F               	goto	u22_25
  1034     0145                     i1l740:
  1035     0145  0870               	movf	___wmul@multiplier,w
  1036     0146  0471               	iorwf	___wmul@multiplier+1,w
  1037     0147  1D03               	btfss	3,2
  1038     0148  294A               	goto	u23_21
  1039     0149  294B               	goto	u23_20
  1040     014A                     u23_21:
  1041     014A  292D               	goto	i1l734
  1042     014B                     u23_20:
  1043     014B                     i1l742:
  1044     014B  0875               	movf	___wmul@product+1,w
  1045     014C  00F1               	movwf	?___wmul+1
  1046     014D  0874               	movf	___wmul@product,w
  1047     014E  00F0               	movwf	?___wmul
  1048     014F                     i1l158:
  1049     014F  0008               	return
  1050     0150                     __end_of___wmul:
  1051                           
  1052                           	psect	text6
  1053     00E9                     __ptext6:	
  1054 ;; *************** function ___lwdiv *****************
  1055 ;; Defined at:
  1056 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwdiv.c"
  1057 ;; Parameters:    Size  Location     Type
  1058 ;;  divisor         2    0[COMMON] unsigned int 
  1059 ;;  dividend        2    2[COMMON] unsigned int 
  1060 ;; Auto vars:     Size  Location     Type
  1061 ;;  quotient        2    4[COMMON] unsigned int 
  1062 ;;  counter         1    6[COMMON] unsigned char 
  1063 ;; Return value:  Size  Location     Type
  1064 ;;                  2    0[COMMON] unsigned int 
  1065 ;; Registers used:
  1066 ;;		wreg, status,2, status,0
  1067 ;; Tracked objects:
  1068 ;;		On entry : 0/0
  1069 ;;		On exit  : 0/0
  1070 ;;		Unchanged: 0/0
  1071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1072 ;;      Params:         4       0       0       0
  1073 ;;      Locals:         3       0       0       0
  1074 ;;      Temps:          0       0       0       0
  1075 ;;      Totals:         7       0       0       0
  1076 ;;Total ram usage:        7 bytes
  1077 ;; Hardware stack levels used: 1
  1078 ;; This function calls:
  1079 ;;		Nothing
  1080 ;; This function is called by:
  1081 ;;		_atualizaDisplay
  1082 ;; This function uses a non-reentrant model
  1083 ;;
  1084                           
  1085     00E9                     ___lwdiv:	
  1086                           ;psect for function ___lwdiv
  1087                           
  1088     00E9                     i1l746:	
  1089                           ;incstack = 0
  1090                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1091                           
  1092     00E9  01F4               	clrf	___lwdiv@quotient
  1093     00EA  01F5               	clrf	___lwdiv@quotient+1
  1094     00EB                     i1l748:
  1095     00EB  0870               	movf	___lwdiv@divisor,w
  1096     00EC  0471               	iorwf	___lwdiv@divisor+1,w
  1097     00ED  1903               	btfsc	3,2
  1098     00EE  28F0               	goto	u24_21
  1099     00EF  28F1               	goto	u24_20
  1100     00F0                     u24_21:
  1101     00F0  2926               	goto	i1l768
  1102     00F1                     u24_20:
  1103     00F1                     i1l750:
  1104     00F1  3001               	movlw	1
  1105     00F2  00F6               	movwf	___lwdiv@counter
  1106     00F3  28FD               	goto	i1l756
  1107     00F4                     i1l752:
  1108     00F4  3001               	movlw	1
  1109     00F5                     u25_25:
  1110     00F5  1003               	clrc
  1111     00F6  0DF0               	rlf	___lwdiv@divisor,f
  1112     00F7  0DF1               	rlf	___lwdiv@divisor+1,f
  1113     00F8  3EFF               	addlw	-1
  1114     00F9  1D03               	skipz
  1115     00FA  28F5               	goto	u25_25
  1116     00FB                     i1l754:
  1117     00FB  3001               	movlw	1
  1118     00FC  07F6               	addwf	___lwdiv@counter,f
  1119     00FD                     i1l756:
  1120     00FD  1FF1               	btfss	___lwdiv@divisor+1,7
  1121     00FE  2900               	goto	u26_21
  1122     00FF  2901               	goto	u26_20
  1123     0100                     u26_21:
  1124     0100  28F4               	goto	i1l752
  1125     0101                     u26_20:
  1126     0101                     i1l758:
  1127     0101  3001               	movlw	1
  1128     0102                     u27_25:
  1129     0102  1003               	clrc
  1130     0103  0DF4               	rlf	___lwdiv@quotient,f
  1131     0104  0DF5               	rlf	___lwdiv@quotient+1,f
  1132     0105  3EFF               	addlw	-1
  1133     0106  1D03               	skipz
  1134     0107  2902               	goto	u27_25
  1135     0108  0871               	movf	___lwdiv@divisor+1,w
  1136     0109  0273               	subwf	___lwdiv@dividend+1,w
  1137     010A  1D03               	skipz
  1138     010B  290E               	goto	u28_25
  1139     010C  0870               	movf	___lwdiv@divisor,w
  1140     010D  0272               	subwf	___lwdiv@dividend,w
  1141     010E                     u28_25:
  1142     010E  1C03               	skipc
  1143     010F  2911               	goto	u28_21
  1144     0110  2912               	goto	u28_20
  1145     0111                     u28_21:
  1146     0111  2919               	goto	i1l764
  1147     0112                     u28_20:
  1148     0112                     i1l760:
  1149     0112  0870               	movf	___lwdiv@divisor,w
  1150     0113  02F2               	subwf	___lwdiv@dividend,f
  1151     0114  0871               	movf	___lwdiv@divisor+1,w
  1152     0115  1C03               	skipc
  1153     0116  03F3               	decf	___lwdiv@dividend+1,f
  1154     0117  02F3               	subwf	___lwdiv@dividend+1,f
  1155     0118                     i1l762:
  1156     0118  1474               	bsf	___lwdiv@quotient,0
  1157     0119                     i1l764:
  1158     0119  3001               	movlw	1
  1159     011A                     u29_25:
  1160     011A  1003               	clrc
  1161     011B  0CF1               	rrf	___lwdiv@divisor+1,f
  1162     011C  0CF0               	rrf	___lwdiv@divisor,f
  1163     011D  3EFF               	addlw	-1
  1164     011E  1D03               	skipz
  1165     011F  291A               	goto	u29_25
  1166     0120                     i1l766:
  1167     0120  3001               	movlw	1
  1168     0121  02F6               	subwf	___lwdiv@counter,f
  1169     0122  1D03               	btfss	3,2
  1170     0123  2925               	goto	u30_21
  1171     0124  2926               	goto	u30_20
  1172     0125                     u30_21:
  1173     0125  2901               	goto	i1l758
  1174     0126                     u30_20:
  1175     0126                     i1l768:
  1176     0126  0875               	movf	___lwdiv@quotient+1,w
  1177     0127  00F1               	movwf	?___lwdiv+1
  1178     0128  0874               	movf	___lwdiv@quotient,w
  1179     0129  00F0               	movwf	?___lwdiv
  1180     012A                     i1l436:
  1181     012A  0008               	return
  1182     012B                     __end_of___lwdiv:
  1183     0000                     ___latbits      equ	0
  1184     007E                     btemp           set	126	;btemp
  1185     007E                     wtemp0          set	126
  1186                           
  1187                           	psect	config
  1188                           
  1189                           ;Config register CONFIG @ 0x2007
  1190                           ;	Oscillator Selection bits
  1191                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  1192                           ;	Watchdog Timer Enable bit
  1193                           ;	WDTE = OFF, WDT disabled
  1194                           ;	Power-up Timer Enable bit
  1195                           ;	PWRTE = OFF, PWRT disabled
  1196                           ;	RA5/MCLR/VPP Pin Function Select bit
  1197                           ;	MCLRE = ON, RA5/MCLR/VPP pin function is MCLR
  1198                           ;	Brown-out Detect Enable bit
  1199                           ;	BOREN = ON, BOD enabled
  1200                           ;	Low-Voltage Programming Enable bit
  1201                           ;	LVP = OFF, RB4/PGM pin has digital I/O function, HV on MCLR must be used for programmi
      +                          ng
  1202                           ;	Data EE Memory Code Protection bit
  1203                           ;	CPD = OFF, Data memory code protection off
  1204                           ;	Flash Program Memory Code Protection bit
  1205                           ;	CP = OFF, Code protection off
  1206     2007                     	org	8199
  1207     2007  3F6A               	dw	16234

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         0
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80      7      29
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _interrupcaoTimer0 in COMMON

    _interrupcaoTimer0->_atualizaDisplay
    _atualizaDisplay->___lwdiv

Critical Paths under _main in BANK0

    _main->_eeprom_escrita

Critical Paths under _interrupcaoTimer0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupcaoTimer0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupcaoTimer0 in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      82
                                              5 BANK0      2     2      0
                     _eeprom_escrita
                     _eeprom_leitura
 ---------------------------------------------------------------------------------
 (1) _eeprom_leitura                                       1     1      0      29
                                              3 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _eeprom_escrita                                       2     1      1      53
                                              3 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _interrupcaoTimer0                                    3     3      0     326
                                              0 BANK0      3     3      0
                    _atualizaDisplay
 ---------------------------------------------------------------------------------
 (3) _atualizaDisplay                                      6     6      0     326
                                              7 COMMON     6     6      0
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4      94
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     164
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _eeprom_escrita
   _eeprom_leitura

 _interrupcaoTimer0 (ROOT)
   _atualizaDisplay
     ___lwdiv
     ___wmul

Address spaces:
Name               Size   Autos  Total    Usage
BANK2               48      0       0      0.0%
BITBANK2            48      0       0      0.0%
BANK1               80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BANK0               80      7      29     36.2%
BITBANK0            80      0       0      0.0%
COMMON              14     13      13     92.9%
BITCOMMON           14      0       0      0.0%
DATA                 0      0      42      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Wed Oct 08 20:43:18 2025

                       l41 01A9                         l50 0172                         l44 0153  
                       l47 016D                         l49 0171        ___wmul@multiplicand 0072  
                      l820 0039                        l830 0051                        l822 003D  
                      l832 0057                        l840 0077                        l824 0041  
                      l842 007D                        l834 0066                        l826 0045  
                      l780 0159                        l772 01A3                        l844 008C  
                      l836 0068                        l828 0047                        l790 016B  
                      l782 0165                        l774 01A7                        l846 0090  
                      l838 006C                        l792 016C                        l784 0166  
                      l848 0094                        l786 0167                        l778 0153  
                      l788 0169                        _GIE 005F                        u310 0159  
                      u311 0158                        u320 0171                        u321 0170  
                      u350 0057                        u407 009A                        u351 0056  
                      u360 0066                        u361 0065                        u370 007D  
                      u371 007C                        u380 008C                        u381 008B  
                      u397 0072                        fsr0 0004          ??_atualizaDisplay 0077  
                      indf 0000                       i1l53 00E8                       i1l59 0183  
                     _TMR0 0001                       _main 0039                       btemp 007E  
                     start 000E                      ?_main 0070                      _EEADR 009B  
          __end_of___lwdiv 012B                      i1l156 0137                      i1l158 014F  
                    i1l436 012A                      i1l800 00D4                      i1l802 00DE  
                    i1l810 017C                      i1l740 0145                      i1l732 012B  
                    i1l804 00DF                      i1l812 017D                      i1l750 00F1  
                    i1l742 014B                      i1l734 012D                      i1l814 017E  
                    i1l806 0173                      i1l760 0112                      i1l752 00F4  
                    i1l736 0131                      i1l808 0178                      i1l816 0182  
                    i1l762 0118                      i1l754 00FB                      i1l746 00E9  
                    i1l738 013E                      i1l764 0119                      i1l756 00FD  
                    i1l748 00EB                      i1l766 0120                      i1l758 0101  
                    i1l768 0126                      i1l794 00A1                      i1l796 00C3  
                    i1l798 00CB                      u20_20 0131                      u20_21 0130  
                    u21_25 0138                      u30_20 0126                      u30_21 0125  
                    u22_25 013F                      u23_20 014B                      u23_21 014A  
                    u24_20 00F1                      u24_21 00F0                      u33_20 0178  
                    u33_21 0177                      u25_25 00F5                      u41_27 00CF  
                    u26_20 0101                      u34_20 017C                      u26_21 0100  
                    u34_21 017B                      u42_27 00E3                      _PORTB 0006  
                    u27_25 0102                      u28_20 0112                      u28_21 0111  
                    u28_25 010E                      u29_25 011A                      _TRISA 0085  
                    _TRISB 0086                      pclath 000A                      status 0003  
                    wtemp0 007E            __initialization 000F               __end_of_main 00A1  
                   ??_main 0039           ??_eeprom_escrita 0038           ??_eeprom_leitura 0037  
                   _EEDATA 009A                     _EECON2 009D                     _INTCON 000B  
                   _TMR0IE 005D                     _TMR0IF 005A     eeprom_leitura@endereco 0037  
                   ___wmul 012B                  ??___lwdiv 0074                     _numero 003B  
                   saved_w 007E    __end_of__initialization 0037             __pcstackCOMMON 0070  
          _atualizaDisplay 00A1               __pidataBANK0 018C                 __pmaintext 0039  
                  ?___wmul 0070                 __pintentry 0004    __end_of_atualizaDisplay 00E9  
                  ___lwdiv 00E9                    __ptext1 01A0                    __ptext2 0150  
                  __ptext3 0173                    __ptext4 00A1                    __ptext5 012B  
                  __ptext6 00E9                    _display 0020       end_of_initialization 0037  
                _PORTAbits 0005                  _PORTBbits 0006           ?_atualizaDisplay 0070  
           __end_of___wmul 0150        start_initialization 000F                   ??___wmul 0074  
              __pdataBANK0 0020          _interrupcaoTimer0 0173         ?_interrupcaoTimer0 0070  
                ___latbits 0000              __pcstackBANK0 0034        ??_interrupcaoTimer0 0034  
                __pnvBANK0 003B           ___lwdiv@dividend 0072                   ?___lwdiv 0070  
__end_of_interrupcaoTimer0 018C           ___lwdiv@quotient 0074     atualizaDisplay@unidade 0079  
        interrupt_function 0004             ___wmul@product 0074          ___wmul@multiplier 0070  
               _EECON1bits 009C             _eeprom_escrita 0150             _eeprom_leitura 01A0  
          ___lwdiv@divisor 0070            ___lwdiv@counter 0076      atualizaDisplay@dezena 007B  
   __end_of_eeprom_escrita 0173     __end_of_eeprom_leitura 01AA     eeprom_escrita@endereco 0038  
               _INTCONbits 000B                   intlevel1 0000            ?_eeprom_escrita 0037  
          ?_eeprom_leitura 0070                 _OPTION_REG 0081        eeprom_escrita@valor 0037  
