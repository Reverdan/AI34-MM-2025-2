

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Wed Oct 01 21:33:04 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F628A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    11                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,space=0,delta=2
    13                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2,group=1
    15                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2,group=1
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18     0000                     
    19                           ; Generated 12/10/2023 GMT
    20                           ; 
    21                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F628A Definitions
    51                           ; 
    52                           ; SFR Addresses
    53     0004                     fsr             equ	4
    54     0004                     fsr0            equ	4
    55     0000                     indf            equ	0
    56     0000                     indf0           equ	0
    57     0002                     pc              equ	2
    58     0002                     pcl             equ	2
    59     000A                     pclath          equ	10
    60     0003                     status          equ	3
    61     0000                     INDF            equ	0	;# 
    62     0001                     TMR0            equ	1	;# 
    63     0002                     PCL             equ	2	;# 
    64     0003                     STATUS          equ	3	;# 
    65     0004                     FSR             equ	4	;# 
    66     0005                     PORTA           equ	5	;# 
    67     0006                     PORTB           equ	6	;# 
    68     000A                     PCLATH          equ	10	;# 
    69     000B                     INTCON          equ	11	;# 
    70     000C                     PIR1            equ	12	;# 
    71     000E                     TMR1            equ	14	;# 
    72     000E                     TMR1L           equ	14	;# 
    73     000F                     TMR1H           equ	15	;# 
    74     0010                     T1CON           equ	16	;# 
    75     0011                     TMR2            equ	17	;# 
    76     0012                     T2CON           equ	18	;# 
    77     0015                     CCPR1           equ	21	;# 
    78     0015                     CCPR1L          equ	21	;# 
    79     0016                     CCPR1H          equ	22	;# 
    80     0017                     CCP1CON         equ	23	;# 
    81     0018                     RCSTA           equ	24	;# 
    82     0019                     TXREG           equ	25	;# 
    83     001A                     RCREG           equ	26	;# 
    84     001F                     CMCON           equ	31	;# 
    85     0081                     OPTION_REG      equ	129	;# 
    86     0085                     TRISA           equ	133	;# 
    87     0086                     TRISB           equ	134	;# 
    88     008C                     PIE1            equ	140	;# 
    89     008E                     PCON            equ	142	;# 
    90     0092                     PR2             equ	146	;# 
    91     0098                     TXSTA           equ	152	;# 
    92     0099                     SPBRG           equ	153	;# 
    93     009A                     EEDATA          equ	154	;# 
    94     009B                     EEADR           equ	155	;# 
    95     009C                     EECON1          equ	156	;# 
    96     009D                     EECON2          equ	157	;# 
    97     009F                     VRCON           equ	159	;# 
    98     0000                     INDF            equ	0	;# 
    99     0001                     TMR0            equ	1	;# 
   100     0002                     PCL             equ	2	;# 
   101     0003                     STATUS          equ	3	;# 
   102     0004                     FSR             equ	4	;# 
   103     0005                     PORTA           equ	5	;# 
   104     0006                     PORTB           equ	6	;# 
   105     000A                     PCLATH          equ	10	;# 
   106     000B                     INTCON          equ	11	;# 
   107     000C                     PIR1            equ	12	;# 
   108     000E                     TMR1            equ	14	;# 
   109     000E                     TMR1L           equ	14	;# 
   110     000F                     TMR1H           equ	15	;# 
   111     0010                     T1CON           equ	16	;# 
   112     0011                     TMR2            equ	17	;# 
   113     0012                     T2CON           equ	18	;# 
   114     0015                     CCPR1           equ	21	;# 
   115     0015                     CCPR1L          equ	21	;# 
   116     0016                     CCPR1H          equ	22	;# 
   117     0017                     CCP1CON         equ	23	;# 
   118     0018                     RCSTA           equ	24	;# 
   119     0019                     TXREG           equ	25	;# 
   120     001A                     RCREG           equ	26	;# 
   121     001F                     CMCON           equ	31	;# 
   122     0081                     OPTION_REG      equ	129	;# 
   123     0085                     TRISA           equ	133	;# 
   124     0086                     TRISB           equ	134	;# 
   125     008C                     PIE1            equ	140	;# 
   126     008E                     PCON            equ	142	;# 
   127     0092                     PR2             equ	146	;# 
   128     0098                     TXSTA           equ	152	;# 
   129     0099                     SPBRG           equ	153	;# 
   130     009A                     EEDATA          equ	154	;# 
   131     009B                     EEADR           equ	155	;# 
   132     009C                     EECON1          equ	156	;# 
   133     009D                     EECON2          equ	157	;# 
   134     009F                     VRCON           equ	159	;# 
   135                           
   136                           	psect	idataBANK0
   137     0159                     __pidataBANK0:
   138                           
   139                           ;initializer for _display
   140     0159  34EE               	retlw	238
   141     015A  3400               	retlw	0
   142     015B  3428               	retlw	40
   143     015C  3400               	retlw	0
   144     015D  34CD               	retlw	205
   145     015E  3400               	retlw	0
   146     015F  346D               	retlw	109
   147     0160  3400               	retlw	0
   148     0161  342B               	retlw	43
   149     0162  3400               	retlw	0
   150     0163  3467               	retlw	103
   151     0164  3400               	retlw	0
   152     0165  34E7               	retlw	231
   153     0166  3400               	retlw	0
   154     0167  342C               	retlw	44
   155     0168  3400               	retlw	0
   156     0169  34EF               	retlw	239
   157     016A  3400               	retlw	0
   158     016B  346F               	retlw	111
   159     016C  3400               	retlw	0
   160     0005                     _PORTAbits      set	5
   161     000B                     _INTCON         set	11
   162     0001                     _TMR0           set	1
   163     0006                     _PORTBbits      set	6
   164     0006                     _PORTB          set	6
   165     005A                     _TMR0IF         set	90
   166     005D                     _TMR0IE         set	93
   167     005F                     _GIE            set	95
   168     0081                     _OPTION_REG     set	129
   169     0086                     _TRISB          set	134
   170     0085                     _TRISA          set	133
   171                           
   172                           	psect	cinit
   173     000F                     start_initialization:	
   174                           ; #config settings
   175                           
   176     000F                     __initialization:
   177                           
   178                           ; Initialize objects allocated to BANK0
   179     000F  2159               	fcall	__pidataBANK0	;fetch initializer
   180     0010  00A0               	movwf	__pdataBANK0& (0+127)
   181     0011  215A               	fcall	__pidataBANK0+1	;fetch initializer
   182     0012  00A1               	movwf	(__pdataBANK0+1)& (0+127)
   183     0013  215B               	fcall	__pidataBANK0+2	;fetch initializer
   184     0014  00A2               	movwf	(__pdataBANK0+2)& (0+127)
   185     0015  215C               	fcall	__pidataBANK0+3	;fetch initializer
   186     0016  00A3               	movwf	(__pdataBANK0+3)& (0+127)
   187     0017  215D               	fcall	__pidataBANK0+4	;fetch initializer
   188     0018  00A4               	movwf	(__pdataBANK0+4)& (0+127)
   189     0019  215E               	fcall	__pidataBANK0+5	;fetch initializer
   190     001A  00A5               	movwf	(__pdataBANK0+5)& (0+127)
   191     001B  215F               	fcall	__pidataBANK0+6	;fetch initializer
   192     001C  00A6               	movwf	(__pdataBANK0+6)& (0+127)
   193     001D  2160               	fcall	__pidataBANK0+7	;fetch initializer
   194     001E  00A7               	movwf	(__pdataBANK0+7)& (0+127)
   195     001F  2161               	fcall	__pidataBANK0+8	;fetch initializer
   196     0020  00A8               	movwf	(__pdataBANK0+8)& (0+127)
   197     0021  2162               	fcall	__pidataBANK0+9	;fetch initializer
   198     0022  00A9               	movwf	(__pdataBANK0+9)& (0+127)
   199     0023  2163               	fcall	__pidataBANK0+10	;fetch initializer
   200     0024  00AA               	movwf	(__pdataBANK0+10)& (0+127)
   201     0025  2164               	fcall	__pidataBANK0+11	;fetch initializer
   202     0026  00AB               	movwf	(__pdataBANK0+11)& (0+127)
   203     0027  2165               	fcall	__pidataBANK0+12	;fetch initializer
   204     0028  00AC               	movwf	(__pdataBANK0+12)& (0+127)
   205     0029  2166               	fcall	__pidataBANK0+13	;fetch initializer
   206     002A  00AD               	movwf	(__pdataBANK0+13)& (0+127)
   207     002B  2167               	fcall	__pidataBANK0+14	;fetch initializer
   208     002C  00AE               	movwf	(__pdataBANK0+14)& (0+127)
   209     002D  2168               	fcall	__pidataBANK0+15	;fetch initializer
   210     002E  00AF               	movwf	(__pdataBANK0+15)& (0+127)
   211     002F  2169               	fcall	__pidataBANK0+16	;fetch initializer
   212     0030  00B0               	movwf	(__pdataBANK0+16)& (0+127)
   213     0031  216A               	fcall	__pidataBANK0+17	;fetch initializer
   214     0032  00B1               	movwf	(__pdataBANK0+17)& (0+127)
   215     0033  216B               	fcall	__pidataBANK0+18	;fetch initializer
   216     0034  00B2               	movwf	(__pdataBANK0+18)& (0+127)
   217     0035  216C               	fcall	__pidataBANK0+19	;fetch initializer
   218     0036  00B3               	movwf	(__pdataBANK0+19)& (0+127)
   219                           
   220                           ; Clear objects allocated to BANK0
   221     0037  01B9               	clrf	__pbssBANK0& (0+127)
   222     0038  01BA               	clrf	(__pbssBANK0+1)& (0+127)
   223     0039                     end_of_initialization:	
   224                           ;End of C runtime variable initialization code
   225                           
   226     0039                     __end_of__initialization:
   227     0039  0183               	clrf	3
   228     003A  283B               	ljmp	_main	;jump to C main() function
   229                           
   230                           	psect	bssBANK0
   231     0039                     __pbssBANK0:
   232     0039                     _numero:
   233     0039                     	ds	2
   234                           
   235                           	psect	dataBANK0
   236     0020                     __pdataBANK0:
   237     0020                     _display:
   238     0020                     	ds	20
   239                           
   240                           	psect	cstackCOMMON
   241     0070                     __pcstackCOMMON:
   242     0070                     ?_atualizaDisplay:
   243     0070                     ?_interrupcaoTimer0:	
   244                           ; 1 bytes @ 0x0
   245                           
   246     0070                     ?_main:	
   247                           ; 1 bytes @ 0x0
   248                           
   249     0070                     ?___wmul:	
   250                           ; 1 bytes @ 0x0
   251                           
   252     0070                     ?___lwdiv:	
   253                           ; 2 bytes @ 0x0
   254                           
   255     0070                     ___wmul@multiplier:	
   256                           ; 2 bytes @ 0x0
   257                           
   258     0070                     ___lwdiv@divisor:	
   259                           ; 2 bytes @ 0x0
   260                           
   261                           
   262                           ; 2 bytes @ 0x0
   263     0070                     	ds	2
   264     0072                     ___wmul@multiplicand:
   265     0072                     ___lwdiv@dividend:	
   266                           ; 2 bytes @ 0x2
   267                           
   268                           
   269                           ; 2 bytes @ 0x2
   270     0072                     	ds	2
   271     0074                     ___wmul@product:
   272     0074                     ___lwdiv@quotient:	
   273                           ; 2 bytes @ 0x4
   274                           
   275     0074                     ??___wmul:	
   276                           ; 2 bytes @ 0x4
   277                           
   278     0074                     ??___lwdiv:	
   279                           ; 1 bytes @ 0x4
   280                           
   281                           
   282                           ; 1 bytes @ 0x4
   283     0074                     	ds	2
   284     0076                     ___lwdiv@counter:
   285                           
   286                           ; 1 bytes @ 0x6
   287     0076                     	ds	1
   288     0077                     ??_atualizaDisplay:
   289                           
   290                           ; 1 bytes @ 0x7
   291     0077                     	ds	2
   292     0079                     atualizaDisplay@unidade:
   293                           
   294                           ; 2 bytes @ 0x9
   295     0079                     	ds	2
   296     007B                     atualizaDisplay@dezena:
   297                           
   298                           ; 2 bytes @ 0xB
   299     007B                     	ds	2
   300                           
   301                           	psect	cstackBANK0
   302     0034                     __pcstackBANK0:
   303     0034                     ??_interrupcaoTimer0:
   304                           
   305                           ; 1 bytes @ 0x0
   306     0034                     	ds	3
   307     0037                     ??_main:
   308                           
   309                           ; 1 bytes @ 0x3
   310     0037                     	ds	2
   311                           
   312                           	psect	maintext
   313     003B                     __pmaintext:	
   314 ;;
   315 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   316 ;;
   317 ;; *************** function _main *****************
   318 ;; Defined at:
   319 ;;		line 43 in file "DisplayInterrupcao.c"
   320 ;; Parameters:    Size  Location     Type
   321 ;;		None
   322 ;; Auto vars:     Size  Location     Type
   323 ;;		None
   324 ;; Return value:  Size  Location     Type
   325 ;;                  1    wreg      void 
   326 ;; Registers used:
   327 ;;		wreg, status,2
   328 ;; Tracked objects:
   329 ;;		On entry : B00/0
   330 ;;		On exit  : 0/0
   331 ;;		Unchanged: 0/0
   332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   333 ;;      Params:         0       0       0       0
   334 ;;      Locals:         0       0       0       0
   335 ;;      Temps:          0       2       0       0
   336 ;;      Totals:         0       2       0       0
   337 ;;Total ram usage:        2 bytes
   338 ;; Hardware stack levels required when called: 3
   339 ;; This function calls:
   340 ;;		Nothing
   341 ;; This function is called by:
   342 ;;		Startup code after reset
   343 ;; This function uses a non-reentrant model
   344 ;;
   345                           
   346     003B                     _main:	
   347                           ;psect for function _main
   348                           
   349     003B                     l746:	
   350                           ;incstack = 0
   351                           ; Regs used in _main: [wreg+status,2]
   352                           
   353                           
   354                           ;DisplayInterrupcao.c: 45:     TRISA = 0xFF;
   355     003B  30FF               	movlw	255
   356     003C  1683               	bsf	3,5	;RP0=1, select bank1
   357     003D  1303               	bcf	3,6	;RP1=0, select bank1
   358     003E  0085               	movwf	5	;volatile
   359     003F                     l748:
   360                           
   361                           ;DisplayInterrupcao.c: 46:     TRISB = 0x00;
   362     003F  0186               	clrf	6	;volatile
   363                           
   364                           ;DisplayInterrupcao.c: 47:     PORTB = 0x00;
   365     0040  1283               	bcf	3,5	;RP0=0, select bank0
   366     0041  1303               	bcf	3,6	;RP1=0, select bank0
   367     0042  0186               	clrf	6	;volatile
   368     0043                     l750:
   369                           
   370                           ;DisplayInterrupcao.c: 49:     OPTION_REG = 0x06;
   371     0043  3006               	movlw	6
   372     0044  1683               	bsf	3,5	;RP0=1, select bank1
   373     0045  1303               	bcf	3,6	;RP1=0, select bank1
   374     0046  0081               	movwf	1	;volatile
   375     0047                     l752:
   376                           
   377                           ;DisplayInterrupcao.c: 50:     INTCON = 0xA0;
   378     0047  30A0               	movlw	160
   379     0048  008B               	movwf	11	;volatile
   380     0049                     l754:
   381                           
   382                           ;DisplayInterrupcao.c: 53:     {;DisplayInterrupcao.c: 54:         if (!PORTAbits.RA2)
   383     0049  1283               	bcf	3,5	;RP0=0, select bank0
   384     004A  1303               	bcf	3,6	;RP1=0, select bank0
   385     004B  1905               	btfsc	5,2	;volatile
   386     004C  284E               	goto	u311
   387     004D  284F               	goto	u310
   388     004E                     u311:
   389     004E  286B               	goto	l762
   390     004F                     u310:
   391     004F                     l756:
   392                           
   393                           ;DisplayInterrupcao.c: 55:         {;DisplayInterrupcao.c: 56:             numero++;
   394     004F  3001               	movlw	1
   395     0050  07B9               	addwf	_numero,f
   396     0051  1803               	skipnc
   397     0052  0ABA               	incf	_numero+1,f
   398     0053  3000               	movlw	0
   399     0054  07BA               	addwf	_numero+1,f
   400                           
   401                           ;DisplayInterrupcao.c: 57:             if (numero > 99)
   402     0055  3000               	movlw	0
   403     0056  023A               	subwf	_numero+1,w
   404     0057  3064               	movlw	100
   405     0058  1903               	skipnz
   406     0059  0239               	subwf	_numero,w
   407     005A  1C03               	skipc
   408     005B  285D               	goto	u321
   409     005C  285E               	goto	u320
   410     005D                     u321:
   411     005D  2860               	goto	l760
   412     005E                     u320:
   413     005E                     l758:
   414                           
   415                           ;DisplayInterrupcao.c: 58:                 numero = 0;
   416     005E  01B9               	clrf	_numero
   417     005F  01BA               	clrf	_numero+1
   418     0060                     l760:
   419                           
   420                           ;DisplayInterrupcao.c: 59:             _delay((unsigned long)((100)*(4000000/4000.0)));
   421     0060  3082               	movlw	130
   422     0061  1283               	bcf	3,5	;RP0=0, select bank0
   423     0062  1303               	bcf	3,6	;RP1=0, select bank0
   424     0063  00B8               	movwf	??_main+1
   425     0064  30DD               	movlw	221
   426     0065  00B7               	movwf	??_main
   427     0066                     u357:
   428     0066  0BB7               	decfsz	??_main,f
   429     0067  2866               	goto	u357
   430     0068  0BB8               	decfsz	??_main+1,f
   431     0069  2866               	goto	u357
   432     006A  0000               	nop
   433     006B                     l762:
   434                           
   435                           ;DisplayInterrupcao.c: 62:         if (!PORTAbits.RA1)
   436     006B  1283               	bcf	3,5	;RP0=0, select bank0
   437     006C  1303               	bcf	3,6	;RP1=0, select bank0
   438     006D  1885               	btfsc	5,1	;volatile
   439     006E  2870               	goto	u331
   440     006F  2871               	goto	u330
   441     0070                     u331:
   442     0070  2849               	goto	l754
   443     0071                     u330:
   444     0071                     l764:
   445                           
   446                           ;DisplayInterrupcao.c: 63:         {;DisplayInterrupcao.c: 64:             numero--;
   447     0071  3001               	movlw	1
   448     0072  02B9               	subwf	_numero,f
   449     0073  3000               	movlw	0
   450     0074  1C03               	skipc
   451     0075  03BA               	decf	_numero+1,f
   452     0076  02BA               	subwf	_numero+1,f
   453                           
   454                           ;DisplayInterrupcao.c: 65:             if (numero > 99)
   455     0077  3000               	movlw	0
   456     0078  023A               	subwf	_numero+1,w
   457     0079  3064               	movlw	100
   458     007A  1903               	skipnz
   459     007B  0239               	subwf	_numero,w
   460     007C  1C03               	skipc
   461     007D  287F               	goto	u341
   462     007E  2880               	goto	u340
   463     007F                     u341:
   464     007F  2884               	goto	l46
   465     0080                     u340:
   466     0080                     l766:
   467                           
   468                           ;DisplayInterrupcao.c: 66:             {;DisplayInterrupcao.c: 67:                 numer
      +                          o = 99;
   469     0080  3063               	movlw	99
   470     0081  00B9               	movwf	_numero
   471     0082  3000               	movlw	0
   472     0083  00BA               	movwf	_numero+1
   473     0084                     l46:	
   474                           ;DisplayInterrupcao.c: 68:             }
   475                           
   476                           
   477                           ;DisplayInterrupcao.c: 69:             _delay((unsigned long)((100)*(4000000/4000.0)));
   478     0084  3082               	movlw	130
   479     0085  1283               	bcf	3,5	;RP0=0, select bank0
   480     0086  1303               	bcf	3,6	;RP1=0, select bank0
   481     0087  00B8               	movwf	??_main+1
   482     0088  30DD               	movlw	221
   483     0089  00B7               	movwf	??_main
   484     008A                     u367:
   485     008A  0BB7               	decfsz	??_main,f
   486     008B  288A               	goto	u367
   487     008C  0BB8               	decfsz	??_main+1,f
   488     008D  288A               	goto	u367
   489     008E  0000               	nop
   490     008F  2849               	goto	l754
   491     0090  280E               	ljmp	start
   492     0091                     __end_of_main:
   493                           
   494                           	psect	text1
   495     0140                     __ptext1:	
   496 ;; *************** function _interrupcaoTimer0 *****************
   497 ;; Defined at:
   498 ;;		line 30 in file "DisplayInterrupcao.c"
   499 ;; Parameters:    Size  Location     Type
   500 ;;		None
   501 ;; Auto vars:     Size  Location     Type
   502 ;;		None
   503 ;; Return value:  Size  Location     Type
   504 ;;                  1    wreg      void 
   505 ;; Registers used:
   506 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   507 ;; Tracked objects:
   508 ;;		On entry : 0/0
   509 ;;		On exit  : 0/0
   510 ;;		Unchanged: 0/0
   511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   512 ;;      Params:         0       0       0       0
   513 ;;      Locals:         0       0       0       0
   514 ;;      Temps:          0       3       0       0
   515 ;;      Totals:         0       3       0       0
   516 ;;Total ram usage:        3 bytes
   517 ;; Hardware stack levels used: 1
   518 ;; Hardware stack levels required when called: 2
   519 ;; This function calls:
   520 ;;		_atualizaDisplay
   521 ;; This function is called by:
   522 ;;		Interrupt level 1
   523 ;; This function uses a non-reentrant model
   524 ;;
   525                           
   526     0140                     _interrupcaoTimer0:	
   527                           ;psect for function _interrupcaoTimer0
   528                           
   529     0140                     i1l732:
   530                           
   531                           ;DisplayInterrupcao.c: 32:     GIE = 0;
   532     0140  138B               	bcf	11,7	;volatile
   533                           
   534                           ;DisplayInterrupcao.c: 33:     if (TMR0IE && TMR0IF)
   535     0141  1E8B               	btfss	11,5	;volatile
   536     0142  2944               	goto	u29_21
   537     0143  2945               	goto	u29_20
   538     0144                     u29_21:
   539     0144  294F               	goto	i1l742
   540     0145                     u29_20:
   541     0145                     i1l734:
   542     0145  1D0B               	btfss	11,2	;volatile
   543     0146  2948               	goto	u30_21
   544     0147  2949               	goto	u30_20
   545     0148                     u30_21:
   546     0148  294F               	goto	i1l742
   547     0149                     u30_20:
   548     0149                     i1l736:
   549                           
   550                           ;DisplayInterrupcao.c: 34:     {;DisplayInterrupcao.c: 35:         atualizaDisplay();
   551     0149  2091               	fcall	_atualizaDisplay
   552     014A                     i1l738:
   553                           
   554                           ;DisplayInterrupcao.c: 36:         TMR0IF = 0;
   555     014A  110B               	bcf	11,2	;volatile
   556     014B                     i1l740:
   557                           
   558                           ;DisplayInterrupcao.c: 37:         TMR0 = 230;
   559     014B  30E6               	movlw	230
   560     014C  1283               	bcf	3,5	;RP0=0, select bank0
   561     014D  1303               	bcf	3,6	;RP1=0, select bank0
   562     014E  0081               	movwf	1	;volatile
   563     014F                     i1l742:
   564                           
   565                           ;DisplayInterrupcao.c: 39:     GIE = 1;
   566     014F  178B               	bsf	11,7	;volatile
   567     0150                     i1l37:
   568     0150  0836               	movf	??_interrupcaoTimer0+2,w
   569     0151  008A               	movwf	10
   570     0152  0835               	movf	??_interrupcaoTimer0+1,w
   571     0153  0084               	movwf	4
   572     0154  0E34               	swapf	??_interrupcaoTimer0,w
   573     0155  0083               	movwf	3
   574     0156  0EFE               	swapf	btemp,f
   575     0157  0E7E               	swapf	btemp,w
   576     0158  0009               	retfie
   577     0159                     __end_of_interrupcaoTimer0:
   578                           
   579                           	psect	intentry
   580     0004                     __pintentry:	
   581                           ;incstack = 0
   582                           ; Regs used in _interrupcaoTimer0: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   583                           
   584     0004                     interrupt_function:
   585     007E                     saved_w         set	btemp
   586     0004  00FE               	movwf	btemp
   587     0005  0E03               	swapf	3,w
   588     0006  1283               	bcf	3,5	;RP0=0, select bank0
   589     0007  1303               	bcf	3,6	;RP1=0, select bank0
   590     0008  00B4               	movwf	??_interrupcaoTimer0
   591     0009  0804               	movf	4,w
   592     000A  00B5               	movwf	??_interrupcaoTimer0+1
   593     000B  080A               	movf	10,w
   594     000C  00B6               	movwf	??_interrupcaoTimer0+2
   595     000D  2940               	ljmp	_interrupcaoTimer0
   596                           
   597                           	psect	text2
   598     0091                     __ptext2:	
   599 ;; *************** function _atualizaDisplay *****************
   600 ;; Defined at:
   601 ;;		line 19 in file "DisplayInterrupcao.c"
   602 ;; Parameters:    Size  Location     Type
   603 ;;		None
   604 ;; Auto vars:     Size  Location     Type
   605 ;;  dezena          2   11[COMMON] int 
   606 ;;  unidade         2    9[COMMON] int 
   607 ;; Return value:  Size  Location     Type
   608 ;;                  1    wreg      void 
   609 ;; Registers used:
   610 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   611 ;; Tracked objects:
   612 ;;		On entry : 0/0
   613 ;;		On exit  : 0/0
   614 ;;		Unchanged: 0/0
   615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   616 ;;      Params:         0       0       0       0
   617 ;;      Locals:         4       0       0       0
   618 ;;      Temps:          2       0       0       0
   619 ;;      Totals:         6       0       0       0
   620 ;;Total ram usage:        6 bytes
   621 ;; Hardware stack levels used: 1
   622 ;; Hardware stack levels required when called: 1
   623 ;; This function calls:
   624 ;;		___lwdiv
   625 ;;		___wmul
   626 ;; This function is called by:
   627 ;;		_interrupcaoTimer0
   628 ;; This function uses a non-reentrant model
   629 ;;
   630                           
   631     0091                     _atualizaDisplay:	
   632                           ;psect for function _atualizaDisplay
   633                           
   634     0091                     i1l720:	
   635                           ;incstack = 0
   636                           ; Regs used in _atualizaDisplay: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   637                           
   638                           
   639                           ;DisplayInterrupcao.c: 21:     int dezena = numero / 10;
   640     0091  300A               	movlw	10
   641     0092  00F0               	movwf	___lwdiv@divisor
   642     0093  3000               	movlw	0
   643     0094  00F1               	movwf	___lwdiv@divisor+1
   644     0095  1283               	bcf	3,5	;RP0=0, select bank0
   645     0096  1303               	bcf	3,6	;RP1=0, select bank0
   646     0097  083A               	movf	_numero+1,w
   647     0098  00F3               	movwf	___lwdiv@dividend+1
   648     0099  0839               	movf	_numero,w
   649     009A  00F2               	movwf	___lwdiv@dividend
   650     009B  20D9               	fcall	___lwdiv
   651     009C  0871               	movf	?___lwdiv+1,w
   652     009D  00FC               	movwf	atualizaDisplay@dezena+1
   653     009E  0870               	movf	?___lwdiv,w
   654     009F  00FB               	movwf	atualizaDisplay@dezena
   655                           
   656                           ;DisplayInterrupcao.c: 22:     int unidade = numero - (dezena * 10);
   657     00A0  087C               	movf	atualizaDisplay@dezena+1,w
   658     00A1  00F1               	movwf	___wmul@multiplier+1
   659     00A2  087B               	movf	atualizaDisplay@dezena,w
   660     00A3  00F0               	movwf	___wmul@multiplier
   661     00A4  30F6               	movlw	246
   662     00A5  00F2               	movwf	___wmul@multiplicand
   663     00A6  30FF               	movlw	255
   664     00A7  00F3               	movwf	___wmul@multiplicand+1
   665     00A8  211B               	fcall	___wmul
   666     00A9  1283               	bcf	3,5	;RP0=0, select bank0
   667     00AA  1303               	bcf	3,6	;RP1=0, select bank0
   668     00AB  0839               	movf	_numero,w
   669     00AC  0770               	addwf	?___wmul,w
   670     00AD  00F9               	movwf	atualizaDisplay@unidade
   671     00AE  083A               	movf	_numero+1,w
   672     00AF  1803               	skipnc
   673     00B0  0A3A               	incf	_numero+1,w
   674     00B1  0771               	addwf	?___wmul+1,w
   675     00B2  00FA               	movwf	atualizaDisplay@unidade+1
   676     00B3                     i1l722:
   677                           
   678                           ;DisplayInterrupcao.c: 23:     PORTB = display[dezena];
   679     00B3  087B               	movf	atualizaDisplay@dezena,w
   680     00B4  00F7               	movwf	??_atualizaDisplay
   681     00B5  0777               	addwf	??_atualizaDisplay,w
   682     00B6  3E20               	addlw	(low (_display| 0))& (0+255)
   683     00B7  0084               	movwf	4
   684     00B8  1383               	bcf	3,7	;select IRP bank0
   685     00B9  0800               	movf	0,w
   686     00BA  0086               	movwf	6	;volatile
   687     00BB                     i1l724:
   688                           
   689                           ;DisplayInterrupcao.c: 24:     _delay((unsigned long)((10)*(4000000/4000.0)));
   690     00BB  300D               	movlw	13
   691     00BC  00F8               	movwf	??_atualizaDisplay+1
   692     00BD  30FB               	movlw	251
   693     00BE  00F7               	movwf	??_atualizaDisplay
   694     00BF                     u37_27:
   695     00BF  0BF7               	decfsz	??_atualizaDisplay,f
   696     00C0  28BF               	goto	u37_27
   697     00C1  0BF8               	decfsz	??_atualizaDisplay+1,f
   698     00C2  28BF               	goto	u37_27
   699     00C3  28C4               	nop2
   700     00C4                     i1l726:
   701                           
   702                           ;DisplayInterrupcao.c: 25:     PORTB = display[unidade];
   703     00C4  0879               	movf	atualizaDisplay@unidade,w
   704     00C5  00F7               	movwf	??_atualizaDisplay
   705     00C6  0777               	addwf	??_atualizaDisplay,w
   706     00C7  3E20               	addlw	(low (_display| 0))& (0+255)
   707     00C8  0084               	movwf	4
   708     00C9  1383               	bcf	3,7	;select IRP bank0
   709     00CA  0800               	movf	0,w
   710     00CB  1283               	bcf	3,5	;RP0=0, select bank0
   711     00CC  1303               	bcf	3,6	;RP1=0, select bank0
   712     00CD  0086               	movwf	6	;volatile
   713     00CE                     i1l728:
   714                           
   715                           ;DisplayInterrupcao.c: 26:     PORTBbits.RB4 = 1;
   716     00CE  1606               	bsf	6,4	;volatile
   717     00CF                     i1l730:
   718                           
   719                           ;DisplayInterrupcao.c: 27:     _delay((unsigned long)((10)*(4000000/4000.0)));
   720     00CF  300D               	movlw	13
   721     00D0  00F8               	movwf	??_atualizaDisplay+1
   722     00D1  30FB               	movlw	251
   723     00D2  00F7               	movwf	??_atualizaDisplay
   724     00D3                     u38_27:
   725     00D3  0BF7               	decfsz	??_atualizaDisplay,f
   726     00D4  28D3               	goto	u38_27
   727     00D5  0BF8               	decfsz	??_atualizaDisplay+1,f
   728     00D6  28D3               	goto	u38_27
   729     00D7  28D8               	nop2
   730     00D8                     i1l31:
   731     00D8  0008               	return
   732     00D9                     __end_of_atualizaDisplay:
   733                           
   734                           	psect	text3
   735     011B                     __ptext3:	
   736 ;; *************** function ___wmul *****************
   737 ;; Defined at:
   738 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul16.c"
   739 ;; Parameters:    Size  Location     Type
   740 ;;  multiplier      2    0[COMMON] unsigned int 
   741 ;;  multiplicand    2    2[COMMON] unsigned int 
   742 ;; Auto vars:     Size  Location     Type
   743 ;;  product         2    4[COMMON] unsigned int 
   744 ;; Return value:  Size  Location     Type
   745 ;;                  2    0[COMMON] unsigned int 
   746 ;; Registers used:
   747 ;;		wreg, status,2, status,0
   748 ;; Tracked objects:
   749 ;;		On entry : 0/0
   750 ;;		On exit  : 0/0
   751 ;;		Unchanged: 0/0
   752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   753 ;;      Params:         4       0       0       0
   754 ;;      Locals:         2       0       0       0
   755 ;;      Temps:          0       0       0       0
   756 ;;      Totals:         6       0       0       0
   757 ;;Total ram usage:        6 bytes
   758 ;; Hardware stack levels used: 1
   759 ;; This function calls:
   760 ;;		Nothing
   761 ;; This function is called by:
   762 ;;		_atualizaDisplay
   763 ;; This function uses a non-reentrant model
   764 ;;
   765                           
   766     011B                     ___wmul:	
   767                           ;psect for function ___wmul
   768                           
   769     011B                     i1l680:	
   770                           ;incstack = 0
   771                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   772                           
   773     011B  01F4               	clrf	___wmul@product
   774     011C  01F5               	clrf	___wmul@product+1
   775     011D                     i1l682:
   776     011D  1C70               	btfss	___wmul@multiplier,0
   777     011E  2920               	goto	u18_21
   778     011F  2921               	goto	u18_20
   779     0120                     u18_21:
   780     0120  2927               	goto	i1l134
   781     0121                     u18_20:
   782     0121                     i1l684:
   783     0121  0872               	movf	___wmul@multiplicand,w
   784     0122  07F4               	addwf	___wmul@product,f
   785     0123  1803               	skipnc
   786     0124  0AF5               	incf	___wmul@product+1,f
   787     0125  0873               	movf	___wmul@multiplicand+1,w
   788     0126  07F5               	addwf	___wmul@product+1,f
   789     0127                     i1l134:
   790     0127  3001               	movlw	1
   791     0128                     u19_25:
   792     0128  1003               	clrc
   793     0129  0DF2               	rlf	___wmul@multiplicand,f
   794     012A  0DF3               	rlf	___wmul@multiplicand+1,f
   795     012B  3EFF               	addlw	-1
   796     012C  1D03               	skipz
   797     012D  2928               	goto	u19_25
   798     012E                     i1l686:
   799     012E  3001               	movlw	1
   800     012F                     u20_25:
   801     012F  1003               	clrc
   802     0130  0CF1               	rrf	___wmul@multiplier+1,f
   803     0131  0CF0               	rrf	___wmul@multiplier,f
   804     0132  3EFF               	addlw	-1
   805     0133  1D03               	skipz
   806     0134  292F               	goto	u20_25
   807     0135                     i1l688:
   808     0135  0870               	movf	___wmul@multiplier,w
   809     0136  0471               	iorwf	___wmul@multiplier+1,w
   810     0137  1D03               	btfss	3,2
   811     0138  293A               	goto	u21_21
   812     0139  293B               	goto	u21_20
   813     013A                     u21_21:
   814     013A  291D               	goto	i1l682
   815     013B                     u21_20:
   816     013B                     i1l690:
   817     013B  0875               	movf	___wmul@product+1,w
   818     013C  00F1               	movwf	?___wmul+1
   819     013D  0874               	movf	___wmul@product,w
   820     013E  00F0               	movwf	?___wmul
   821     013F                     i1l136:
   822     013F  0008               	return
   823     0140                     __end_of___wmul:
   824                           
   825                           	psect	text4
   826     00D9                     __ptext4:	
   827 ;; *************** function ___lwdiv *****************
   828 ;; Defined at:
   829 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwdiv.c"
   830 ;; Parameters:    Size  Location     Type
   831 ;;  divisor         2    0[COMMON] unsigned int 
   832 ;;  dividend        2    2[COMMON] unsigned int 
   833 ;; Auto vars:     Size  Location     Type
   834 ;;  quotient        2    4[COMMON] unsigned int 
   835 ;;  counter         1    6[COMMON] unsigned char 
   836 ;; Return value:  Size  Location     Type
   837 ;;                  2    0[COMMON] unsigned int 
   838 ;; Registers used:
   839 ;;		wreg, status,2, status,0
   840 ;; Tracked objects:
   841 ;;		On entry : 0/0
   842 ;;		On exit  : 0/0
   843 ;;		Unchanged: 0/0
   844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   845 ;;      Params:         4       0       0       0
   846 ;;      Locals:         3       0       0       0
   847 ;;      Temps:          0       0       0       0
   848 ;;      Totals:         7       0       0       0
   849 ;;Total ram usage:        7 bytes
   850 ;; Hardware stack levels used: 1
   851 ;; This function calls:
   852 ;;		Nothing
   853 ;; This function is called by:
   854 ;;		_atualizaDisplay
   855 ;; This function uses a non-reentrant model
   856 ;;
   857                           
   858     00D9                     ___lwdiv:	
   859                           ;psect for function ___lwdiv
   860                           
   861     00D9                     i1l694:	
   862                           ;incstack = 0
   863                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
   864                           
   865     00D9  01F4               	clrf	___lwdiv@quotient
   866     00DA  01F5               	clrf	___lwdiv@quotient+1
   867     00DB                     i1l696:
   868     00DB  0870               	movf	___lwdiv@divisor,w
   869     00DC  0471               	iorwf	___lwdiv@divisor+1,w
   870     00DD  1903               	btfsc	3,2
   871     00DE  28E0               	goto	u22_21
   872     00DF  28E1               	goto	u22_20
   873     00E0                     u22_21:
   874     00E0  2916               	goto	i1l716
   875     00E1                     u22_20:
   876     00E1                     i1l698:
   877     00E1  3001               	movlw	1
   878     00E2  00F6               	movwf	___lwdiv@counter
   879     00E3  28ED               	goto	i1l704
   880     00E4                     i1l700:
   881     00E4  3001               	movlw	1
   882     00E5                     u23_25:
   883     00E5  1003               	clrc
   884     00E6  0DF0               	rlf	___lwdiv@divisor,f
   885     00E7  0DF1               	rlf	___lwdiv@divisor+1,f
   886     00E8  3EFF               	addlw	-1
   887     00E9  1D03               	skipz
   888     00EA  28E5               	goto	u23_25
   889     00EB                     i1l702:
   890     00EB  3001               	movlw	1
   891     00EC  07F6               	addwf	___lwdiv@counter,f
   892     00ED                     i1l704:
   893     00ED  1FF1               	btfss	___lwdiv@divisor+1,7
   894     00EE  28F0               	goto	u24_21
   895     00EF  28F1               	goto	u24_20
   896     00F0                     u24_21:
   897     00F0  28E4               	goto	i1l700
   898     00F1                     u24_20:
   899     00F1                     i1l706:
   900     00F1  3001               	movlw	1
   901     00F2                     u25_25:
   902     00F2  1003               	clrc
   903     00F3  0DF4               	rlf	___lwdiv@quotient,f
   904     00F4  0DF5               	rlf	___lwdiv@quotient+1,f
   905     00F5  3EFF               	addlw	-1
   906     00F6  1D03               	skipz
   907     00F7  28F2               	goto	u25_25
   908     00F8  0871               	movf	___lwdiv@divisor+1,w
   909     00F9  0273               	subwf	___lwdiv@dividend+1,w
   910     00FA  1D03               	skipz
   911     00FB  28FE               	goto	u26_25
   912     00FC  0870               	movf	___lwdiv@divisor,w
   913     00FD  0272               	subwf	___lwdiv@dividend,w
   914     00FE                     u26_25:
   915     00FE  1C03               	skipc
   916     00FF  2901               	goto	u26_21
   917     0100  2902               	goto	u26_20
   918     0101                     u26_21:
   919     0101  2909               	goto	i1l712
   920     0102                     u26_20:
   921     0102                     i1l708:
   922     0102  0870               	movf	___lwdiv@divisor,w
   923     0103  02F2               	subwf	___lwdiv@dividend,f
   924     0104  0871               	movf	___lwdiv@divisor+1,w
   925     0105  1C03               	skipc
   926     0106  03F3               	decf	___lwdiv@dividend+1,f
   927     0107  02F3               	subwf	___lwdiv@dividend+1,f
   928     0108                     i1l710:
   929     0108  1474               	bsf	___lwdiv@quotient,0
   930     0109                     i1l712:
   931     0109  3001               	movlw	1
   932     010A                     u27_25:
   933     010A  1003               	clrc
   934     010B  0CF1               	rrf	___lwdiv@divisor+1,f
   935     010C  0CF0               	rrf	___lwdiv@divisor,f
   936     010D  3EFF               	addlw	-1
   937     010E  1D03               	skipz
   938     010F  290A               	goto	u27_25
   939     0110                     i1l714:
   940     0110  3001               	movlw	1
   941     0111  02F6               	subwf	___lwdiv@counter,f
   942     0112  1D03               	btfss	3,2
   943     0113  2915               	goto	u28_21
   944     0114  2916               	goto	u28_20
   945     0115                     u28_21:
   946     0115  28F1               	goto	i1l706
   947     0116                     u28_20:
   948     0116                     i1l716:
   949     0116  0875               	movf	___lwdiv@quotient+1,w
   950     0117  00F1               	movwf	?___lwdiv+1
   951     0118  0874               	movf	___lwdiv@quotient,w
   952     0119  00F0               	movwf	?___lwdiv
   953     011A                     i1l414:
   954     011A  0008               	return
   955     011B                     __end_of___lwdiv:
   956     0000                     ___latbits      equ	0
   957     007E                     btemp           set	126	;btemp
   958     007E                     wtemp0          set	126
   959                           
   960                           	psect	config
   961                           
   962                           ;Config register CONFIG @ 0x2007
   963                           ;	Oscillator Selection bits
   964                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
   965                           ;	Watchdog Timer Enable bit
   966                           ;	WDTE = OFF, WDT disabled
   967                           ;	Power-up Timer Enable bit
   968                           ;	PWRTE = OFF, PWRT disabled
   969                           ;	RA5/MCLR/VPP Pin Function Select bit
   970                           ;	MCLRE = ON, RA5/MCLR/VPP pin function is MCLR
   971                           ;	Brown-out Detect Enable bit
   972                           ;	BOREN = ON, BOD enabled
   973                           ;	Low-Voltage Programming Enable bit
   974                           ;	LVP = OFF, RB4/PGM pin has digital I/O function, HV on MCLR must be used for programmi
      +                          ng
   975                           ;	Data EE Memory Code Protection bit
   976                           ;	CPD = OFF, Data memory code protection off
   977                           ;	Flash Program Memory Code Protection bit
   978                           ;	CP = OFF, Code protection off
   979     2007                     	org	8199
   980     2007  3F6A               	dw	16234

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80      5      27
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _interrupcaoTimer0 in COMMON

    _interrupcaoTimer0->_atualizaDisplay
    _atualizaDisplay->___lwdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _interrupcaoTimer0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupcaoTimer0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupcaoTimer0 in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              3 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _interrupcaoTimer0                                    3     3      0     326
                                              0 BANK0      3     3      0
                    _atualizaDisplay
 ---------------------------------------------------------------------------------
 (2) _atualizaDisplay                                      6     6      0     326
                                              7 COMMON     6     6      0
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4      94
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     164
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _interrupcaoTimer0 (ROOT)
   _atualizaDisplay
     ___lwdiv
     ___wmul

Address spaces:
Name               Size   Autos  Total    Usage
BANK2               48      0       0      0.0%
BITBANK2            48      0       0      0.0%
BANK1               80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BANK0               80      5      27     33.8%
BITBANK0            80      0       0      0.0%
COMMON              14     13      13     92.9%
BITCOMMON           14      0       0      0.0%
DATA                 0      0      40      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Wed Oct 01 21:33:04 2025

                       l46 0084        ___wmul@multiplicand 0072                        l750 0043  
                      l760 0060                        l752 0047                        l762 006B  
                      l754 0049                        l746 003B                        l764 0071  
                      l756 004F                        l748 003F                        l766 0080  
                      l758 005E                        _GIE 005F                        u310 004F  
                      u311 004E                        u320 005E                        u321 005D  
                      u330 0071                        u331 0070                        u340 0080  
                      u341 007F                        u357 0066                        u367 008A  
                      fsr0 0004          ??_atualizaDisplay 0077                        indf 0000  
                     i1l31 00D8                       i1l37 0150                       _TMR0 0001  
                     _main 003B                       btemp 007E                       start 000E  
                    ?_main 0070            __end_of___lwdiv 011B                      i1l134 0127  
                    i1l136 013F                      i1l414 011A                      i1l700 00E4  
                    i1l710 0108                      i1l702 00EB                      i1l712 0109  
                    i1l704 00ED                      i1l720 0091                      i1l714 0110  
                    i1l706 00F1                      i1l730 00CF                      i1l722 00B3  
                    i1l708 0102                      i1l716 0116                      i1l724 00BB  
                    i1l740 014B                      i1l732 0140                      i1l726 00C4  
                    i1l734 0145                      i1l742 014F                      i1l680 011B  
                    i1l728 00CE                      i1l736 0149                      i1l690 013B  
                    i1l682 011D                      i1l738 014A                      i1l684 0121  
                    i1l694 00D9                      i1l686 012E                      i1l696 00DB  
                    i1l688 0135                      i1l698 00E1                      u20_25 012F  
                    u21_20 013B                      u21_21 013A                      u22_20 00E1  
                    u30_20 0149                      u22_21 00E0                      u30_21 0148  
                    u23_25 00E5                      u24_20 00F1                      u24_21 00F0  
                    u25_25 00F2                      u26_20 0102                      u18_20 0121  
                    u26_21 0101                      u18_21 0120                      u26_25 00FE  
                    _PORTB 0006                      u27_25 010A                      u19_25 0128  
                    u28_20 0116                      u28_21 0115                      u29_20 0145  
                    u29_21 0144                      u37_27 00BF                      u38_27 00D3  
                    _TRISA 0085                      _TRISB 0086                      pclath 000A  
                    status 0003                      wtemp0 007E            __initialization 000F  
             __end_of_main 0091                     ??_main 0037                     _INTCON 000B  
                   _TMR0IE 005D                     _TMR0IF 005A                     ___wmul 011B  
                ??___lwdiv 0074                     _numero 0039                     saved_w 007E  
  __end_of__initialization 0039             __pcstackCOMMON 0070            _atualizaDisplay 0091  
             __pidataBANK0 0159                 __pbssBANK0 0039                 __pmaintext 003B  
                  ?___wmul 0070                 __pintentry 0004    __end_of_atualizaDisplay 00D9  
                  ___lwdiv 00D9                    __ptext1 0140                    __ptext2 0091  
                  __ptext3 011B                    __ptext4 00D9                    _display 0020  
     end_of_initialization 0039                  _PORTAbits 0005                  _PORTBbits 0006  
         ?_atualizaDisplay 0070             __end_of___wmul 0140        start_initialization 000F  
                 ??___wmul 0074                __pdataBANK0 0020          _interrupcaoTimer0 0140  
       ?_interrupcaoTimer0 0070                  ___latbits 0000              __pcstackBANK0 0034  
      ??_interrupcaoTimer0 0034           ___lwdiv@dividend 0072                   ?___lwdiv 0070  
__end_of_interrupcaoTimer0 0159           ___lwdiv@quotient 0074     atualizaDisplay@unidade 0079  
        interrupt_function 0004             ___wmul@product 0074          ___wmul@multiplier 0070  
          ___lwdiv@divisor 0070            ___lwdiv@counter 0076      atualizaDisplay@dezena 007B  
                 intlevel1 0000                 _OPTION_REG 0081  
